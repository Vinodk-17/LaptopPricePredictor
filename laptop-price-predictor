{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f79fc373",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd \n",
    "import numpy as np\n",
    "from matplotlib import pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "cf3a005c",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('laptop_data.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "715ffd00",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 2.3GHz</td>\n",
       "      <td>8GB</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37kg</td>\n",
       "      <td>71378.6832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>Intel Core i5 1.8GHz</td>\n",
       "      <td>8GB</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34kg</td>\n",
       "      <td>47895.5232</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8GB</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86kg</td>\n",
       "      <td>30636.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>Intel Core i7 2.7GHz</td>\n",
       "      <td>16GB</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83kg</td>\n",
       "      <td>135195.3360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 3.1GHz</td>\n",
       "      <td>8GB</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37kg</td>\n",
       "      <td>96095.8080</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0 Company   TypeName  Inches                    ScreenResolution  \\\n",
       "0           0   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "1           1   Apple  Ultrabook    13.3                            1440x900   \n",
       "2           2      HP   Notebook    15.6                   Full HD 1920x1080   \n",
       "3           3   Apple  Ultrabook    15.4  IPS Panel Retina Display 2880x1800   \n",
       "4           4   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "\n",
       "                          Cpu   Ram               Memory  \\\n",
       "0        Intel Core i5 2.3GHz   8GB            128GB SSD   \n",
       "1        Intel Core i5 1.8GHz   8GB  128GB Flash Storage   \n",
       "2  Intel Core i5 7200U 2.5GHz   8GB            256GB SSD   \n",
       "3        Intel Core i7 2.7GHz  16GB            512GB SSD   \n",
       "4        Intel Core i5 3.1GHz   8GB            256GB SSD   \n",
       "\n",
       "                            Gpu  OpSys  Weight        Price  \n",
       "0  Intel Iris Plus Graphics 640  macOS  1.37kg   71378.6832  \n",
       "1        Intel HD Graphics 6000  macOS  1.34kg   47895.5232  \n",
       "2         Intel HD Graphics 620  No OS  1.86kg   30636.0000  \n",
       "3            AMD Radeon Pro 455  macOS  1.83kg  135195.3360  \n",
       "4  Intel Iris Plus Graphics 650  macOS  1.37kg   96095.8080  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d7ca5436",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1303, 12)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape  #to check the size of the size matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "6164b0ca",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1303 entries, 0 to 1302\n",
      "Data columns (total 12 columns):\n",
      " #   Column            Non-Null Count  Dtype  \n",
      "---  ------            --------------  -----  \n",
      " 0   Unnamed: 0        1303 non-null   int64  \n",
      " 1   Company           1303 non-null   object \n",
      " 2   TypeName          1303 non-null   object \n",
      " 3   Inches            1303 non-null   float64\n",
      " 4   ScreenResolution  1303 non-null   object \n",
      " 5   Cpu               1303 non-null   object \n",
      " 6   Ram               1303 non-null   object \n",
      " 7   Memory            1303 non-null   object \n",
      " 8   Gpu               1303 non-null   object \n",
      " 9   OpSys             1303 non-null   object \n",
      " 10  Weight            1303 non-null   object \n",
      " 11  Price             1303 non-null   float64\n",
      "dtypes: float64(2), int64(1), object(9)\n",
      "memory usage: 122.3+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info() #to find the information of the df with datatype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "1c1cf41f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.duplicated().sum()  #check if any col or row are duplicate or not"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "fe33c7d7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Unnamed: 0          0\n",
       "Company             0\n",
       "TypeName            0\n",
       "Inches              0\n",
       "ScreenResolution    0\n",
       "Cpu                 0\n",
       "Ram                 0\n",
       "Memory              0\n",
       "Gpu                 0\n",
       "OpSys               0\n",
       "Weight              0\n",
       "Price               0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()  # check if any col have no value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "e8252d6d",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(columns=['Unnamed: 0'],inplace=True )  # to delete a column from the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "6458bced",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 2.3GHz</td>\n",
       "      <td>8GB</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37kg</td>\n",
       "      <td>71378.6832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>Intel Core i5 1.8GHz</td>\n",
       "      <td>8GB</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34kg</td>\n",
       "      <td>47895.5232</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8GB</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86kg</td>\n",
       "      <td>30636.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>Intel Core i7 2.7GHz</td>\n",
       "      <td>16GB</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83kg</td>\n",
       "      <td>135195.3360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 3.1GHz</td>\n",
       "      <td>8GB</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37kg</td>\n",
       "      <td>96095.8080</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Inches                    ScreenResolution  \\\n",
       "0   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "1   Apple  Ultrabook    13.3                            1440x900   \n",
       "2      HP   Notebook    15.6                   Full HD 1920x1080   \n",
       "3   Apple  Ultrabook    15.4  IPS Panel Retina Display 2880x1800   \n",
       "4   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "\n",
       "                          Cpu   Ram               Memory  \\\n",
       "0        Intel Core i5 2.3GHz   8GB            128GB SSD   \n",
       "1        Intel Core i5 1.8GHz   8GB  128GB Flash Storage   \n",
       "2  Intel Core i5 7200U 2.5GHz   8GB            256GB SSD   \n",
       "3        Intel Core i7 2.7GHz  16GB            512GB SSD   \n",
       "4        Intel Core i5 3.1GHz   8GB            256GB SSD   \n",
       "\n",
       "                            Gpu  OpSys  Weight        Price  \n",
       "0  Intel Iris Plus Graphics 640  macOS  1.37kg   71378.6832  \n",
       "1        Intel HD Graphics 6000  macOS  1.34kg   47895.5232  \n",
       "2         Intel HD Graphics 620  No OS  1.86kg   30636.0000  \n",
       "3            AMD Radeon Pro 455  macOS  1.83kg  135195.3360  \n",
       "4  Intel Iris Plus Graphics 650  macOS  1.37kg   96095.8080  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "915819ee",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Ram'] = df['Ram'].str.replace('GB','')    # to replace gb string to nothing\n",
    "df['Weight'] = df['Weight'].str.replace('kg','')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "52768923",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 2.3GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>Intel Core i5 1.8GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>Intel Core i7 2.7GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 3.1GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Inches                    ScreenResolution  \\\n",
       "0   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "1   Apple  Ultrabook    13.3                            1440x900   \n",
       "2      HP   Notebook    15.6                   Full HD 1920x1080   \n",
       "3   Apple  Ultrabook    15.4  IPS Panel Retina Display 2880x1800   \n",
       "4   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "\n",
       "                          Cpu Ram               Memory  \\\n",
       "0        Intel Core i5 2.3GHz   8            128GB SSD   \n",
       "1        Intel Core i5 1.8GHz   8  128GB Flash Storage   \n",
       "2  Intel Core i5 7200U 2.5GHz   8            256GB SSD   \n",
       "3        Intel Core i7 2.7GHz  16            512GB SSD   \n",
       "4        Intel Core i5 3.1GHz   8            256GB SSD   \n",
       "\n",
       "                            Gpu  OpSys Weight        Price  \n",
       "0  Intel Iris Plus Graphics 640  macOS   1.37   71378.6832  \n",
       "1        Intel HD Graphics 6000  macOS   1.34   47895.5232  \n",
       "2         Intel HD Graphics 620  No OS   1.86   30636.0000  \n",
       "3            AMD Radeon Pro 455  macOS   1.83  135195.3360  \n",
       "4  Intel Iris Plus Graphics 650  macOS   1.37   96095.8080  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "c0bd8499",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Ram']= df['Ram'].astype('int32')\n",
    "df['Weight']=df['Weight'].astype('float32')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "1bb5829b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 2.3GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>Intel Core i5 1.8GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>Intel Core i7 2.7GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 3.1GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Inches                    ScreenResolution  \\\n",
       "0   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "1   Apple  Ultrabook    13.3                            1440x900   \n",
       "2      HP   Notebook    15.6                   Full HD 1920x1080   \n",
       "3   Apple  Ultrabook    15.4  IPS Panel Retina Display 2880x1800   \n",
       "4   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "\n",
       "                          Cpu  Ram               Memory  \\\n",
       "0        Intel Core i5 2.3GHz    8            128GB SSD   \n",
       "1        Intel Core i5 1.8GHz    8  128GB Flash Storage   \n",
       "2  Intel Core i5 7200U 2.5GHz    8            256GB SSD   \n",
       "3        Intel Core i7 2.7GHz   16            512GB SSD   \n",
       "4        Intel Core i5 3.1GHz    8            256GB SSD   \n",
       "\n",
       "                            Gpu  OpSys  Weight        Price  \n",
       "0  Intel Iris Plus Graphics 640  macOS    1.37   71378.6832  \n",
       "1        Intel HD Graphics 6000  macOS    1.34   47895.5232  \n",
       "2         Intel HD Graphics 620  No OS    1.86   30636.0000  \n",
       "3            AMD Radeon Pro 455  macOS    1.83  135195.3360  \n",
       "4  Intel Iris Plus Graphics 650  macOS    1.37   96095.8080  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "21987bc9",
   "metadata": {},
   "source": [
    "# EDA of the data  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "1a7f7e48",
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "09e389a8",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Vinay\\anaconda3\\lib\\site-packages\\seaborn\\distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "  warnings.warn(msg, FutureWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Price', ylabel='Density'>"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(df['Price'])  #the distrubtion of the data for the density and the price chart is skewed type"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "6cdcfcd4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Company'].value_counts().plot(kind='bar')  # to check the number of the laptop of the different brad"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "86660494",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(x=df['Company'],y=df['Price'])\n",
    "plt.xticks(rotation='vertical')\n",
    "plt.show()\n",
    "\n",
    "#bar graph for company laptop  with is avg price"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "18776a23",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['TypeName'].value_counts().plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "ac35c6cc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(x=df['TypeName'],y=df['Price'])\n",
    "plt.xticks(rotation='vertical')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "3772ee2b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1cd0c778790>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.displot(df['Inches'])\n",
    "#to compare the price of the laptop with the computer inches"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "7eaff733",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Inches', ylabel='Price'>"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(x=df['Inches'],y=df['Price'])\n",
    "#this show there not a strong relationship between the inches and the price"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "322246a2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Full HD 1920x1080                                507\n",
       "1366x768                                         281\n",
       "IPS Panel Full HD 1920x1080                      230\n",
       "IPS Panel Full HD / Touchscreen 1920x1080         53\n",
       "Full HD / Touchscreen 1920x1080                   47\n",
       "1600x900                                          23\n",
       "Touchscreen 1366x768                              16\n",
       "Quad HD+ / Touchscreen 3200x1800                  15\n",
       "IPS Panel 4K Ultra HD 3840x2160                   12\n",
       "IPS Panel 4K Ultra HD / Touchscreen 3840x2160     11\n",
       "4K Ultra HD / Touchscreen 3840x2160               10\n",
       "4K Ultra HD 3840x2160                              7\n",
       "Touchscreen 2560x1440                              7\n",
       "IPS Panel 1366x768                                 7\n",
       "IPS Panel Quad HD+ / Touchscreen 3200x1800         6\n",
       "IPS Panel Retina Display 2560x1600                 6\n",
       "IPS Panel Retina Display 2304x1440                 6\n",
       "Touchscreen 2256x1504                              6\n",
       "IPS Panel Touchscreen 2560x1440                    5\n",
       "IPS Panel Retina Display 2880x1800                 4\n",
       "IPS Panel Touchscreen 1920x1200                    4\n",
       "1440x900                                           4\n",
       "IPS Panel 2560x1440                                4\n",
       "IPS Panel Quad HD+ 2560x1440                       3\n",
       "Quad HD+ 3200x1800                                 3\n",
       "1920x1080                                          3\n",
       "Touchscreen 2400x1600                              3\n",
       "2560x1440                                          3\n",
       "IPS Panel Touchscreen 1366x768                     3\n",
       "IPS Panel Touchscreen / 4K Ultra HD 3840x2160      2\n",
       "IPS Panel Full HD 2160x1440                        2\n",
       "IPS Panel Quad HD+ 3200x1800                       2\n",
       "IPS Panel Retina Display 2736x1824                 1\n",
       "IPS Panel Full HD 1920x1200                        1\n",
       "IPS Panel Full HD 2560x1440                        1\n",
       "IPS Panel Full HD 1366x768                         1\n",
       "Touchscreen / Full HD 1920x1080                    1\n",
       "Touchscreen / Quad HD+ 3200x1800                   1\n",
       "Touchscreen / 4K Ultra HD 3840x2160                1\n",
       "IPS Panel Touchscreen 2400x1600                    1\n",
       "Name: ScreenResolution, dtype: int64"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['ScreenResolution'].value_counts()\n",
    "#to check the sum of laptop having same screenresolution"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "9d2edc73",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Touchscreen'] = df['ScreenResolution'].apply(lambda x:1 if 'Touchscreen' in x else 0)\n",
    "\n",
    "# Doing the feature engineering here\n",
    "#Feature engineering is a machine learning technique that leverages data to create new variables that aren't in the training set.\n",
    "#making a new column for the laptop having touchscreen or not if yes the value is 1 else 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "14cc9e29",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>156</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>2 in 1 Convertible</td>\n",
       "      <td>14.0</td>\n",
       "      <td>IPS Panel Full HD / Touchscreen 1920x1080</td>\n",
       "      <td>Intel Core i3 7100U 2.4GHz</td>\n",
       "      <td>4</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.74</td>\n",
       "      <td>33513.1200</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>844</th>\n",
       "      <td>HP</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>14.0</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i7 6500U 2.5GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>Intel HD Graphics 520</td>\n",
       "      <td>Windows 7</td>\n",
       "      <td>1.54</td>\n",
       "      <td>99633.6000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>656</th>\n",
       "      <td>Dell</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i7 8550U 1.8GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>AMD Radeon 530</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.20</td>\n",
       "      <td>48964.3200</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1295</th>\n",
       "      <td>Dell</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>1366x768</td>\n",
       "      <td>Intel Core i7 7500U 2.7GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>1TB HDD</td>\n",
       "      <td>AMD Radeon R5 M430</td>\n",
       "      <td>Linux</td>\n",
       "      <td>2.30</td>\n",
       "      <td>42943.1472</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1195</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>IPS Panel Full HD 1920x1080</td>\n",
       "      <td>Intel Core i7 7700HQ 2.8GHz</td>\n",
       "      <td>12</td>\n",
       "      <td>128GB SSD +  1TB HDD</td>\n",
       "      <td>Nvidia GeForce GTX 1050</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.21</td>\n",
       "      <td>70702.5600</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Company            TypeName  Inches  \\\n",
       "156   Lenovo  2 in 1 Convertible    14.0   \n",
       "844       HP           Ultrabook    14.0   \n",
       "656     Dell            Notebook    15.6   \n",
       "1295    Dell            Notebook    15.6   \n",
       "1195      HP            Notebook    15.6   \n",
       "\n",
       "                               ScreenResolution                          Cpu  \\\n",
       "156   IPS Panel Full HD / Touchscreen 1920x1080   Intel Core i3 7100U 2.4GHz   \n",
       "844                           Full HD 1920x1080   Intel Core i7 6500U 2.5GHz   \n",
       "656                           Full HD 1920x1080   Intel Core i7 8550U 1.8GHz   \n",
       "1295                                   1366x768   Intel Core i7 7500U 2.7GHz   \n",
       "1195                IPS Panel Full HD 1920x1080  Intel Core i7 7700HQ 2.8GHz   \n",
       "\n",
       "      Ram                Memory                      Gpu       OpSys  Weight  \\\n",
       "156     4             256GB SSD    Intel HD Graphics 620  Windows 10    1.74   \n",
       "844     8             512GB SSD    Intel HD Graphics 520   Windows 7    1.54   \n",
       "656     8             256GB SSD           AMD Radeon 530  Windows 10    2.20   \n",
       "1295    8               1TB HDD       AMD Radeon R5 M430       Linux    2.30   \n",
       "1195   12  128GB SSD +  1TB HDD  Nvidia GeForce GTX 1050  Windows 10    2.21   \n",
       "\n",
       "           Price  Touchscreen  \n",
       "156   33513.1200            1  \n",
       "844   99633.6000            0  \n",
       "656   48964.3200            0  \n",
       "1295  42943.1472            0  \n",
       "1195  70702.5600            0  "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sample(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "b023d14a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Touchscreen'].value_counts().plot(kind='bar')\n",
    "\n",
    "#ploting chart to check the  number of computer having touchscreen or not "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "a9d6290c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Touchscreen', ylabel='Price'>"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(x=df['Touchscreen'],y=df['Price'])\n",
    "\n",
    "#to check relation between the touchscreen with the price"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "09cb405d",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Ips'] = df['ScreenResolution'].apply(lambda x:1 if 'IPS' in x else 0)\n",
    "\n",
    "# Doing the feature engineering here\n",
    "#making a new column for the laptop having Ips or not if yes the value is 1 else 0\n",
    "#IPS stands for in-plane switching, a type of LED (a form of LCD) display panel technology. IPS panels are characterized as having the best color and viewing angles among the other main types of display panels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "1661eee1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>Ips</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 2.3GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>Intel Core i5 1.8GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>Intel Core i7 2.7GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 3.1GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Inches                    ScreenResolution  \\\n",
       "0   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "1   Apple  Ultrabook    13.3                            1440x900   \n",
       "2      HP   Notebook    15.6                   Full HD 1920x1080   \n",
       "3   Apple  Ultrabook    15.4  IPS Panel Retina Display 2880x1800   \n",
       "4   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "\n",
       "                          Cpu  Ram               Memory  \\\n",
       "0        Intel Core i5 2.3GHz    8            128GB SSD   \n",
       "1        Intel Core i5 1.8GHz    8  128GB Flash Storage   \n",
       "2  Intel Core i5 7200U 2.5GHz    8            256GB SSD   \n",
       "3        Intel Core i7 2.7GHz   16            512GB SSD   \n",
       "4        Intel Core i5 3.1GHz    8            256GB SSD   \n",
       "\n",
       "                            Gpu  OpSys  Weight        Price  Touchscreen  Ips  \n",
       "0  Intel Iris Plus Graphics 640  macOS    1.37   71378.6832            0    1  \n",
       "1        Intel HD Graphics 6000  macOS    1.34   47895.5232            0    0  \n",
       "2         Intel HD Graphics 620  No OS    1.86   30636.0000            0    0  \n",
       "3            AMD Radeon Pro 455  macOS    1.83  135195.3360            0    1  \n",
       "4  Intel Iris Plus Graphics 650  macOS    1.37   96095.8080            0    1  "
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "828c986a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXcAAAD1CAYAAACrz7WZAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAAALZklEQVR4nO3cX4id+V3H8ffHxF1tFzHLzoY0SU3E0ZoIUhliteCFERJZMXuzkEJLKAu5SbUVQRNvehVYQUQvXCG0SsDSENbChhaqS3QvRNh0truo2TQmNNtkTNxMxf8XaZN+vZgHPJ2dyZzNzMkk37xfN+ec3/M753wHJu95eDJnUlVIknr5gfUeQJK09oy7JDVk3CWpIeMuSQ0Zd0lqyLhLUkMb13sAgKeeeqp27Nix3mNI0kPl9ddf/3ZVTS117IGI+44dO5idnV3vMSTpoZLkW8sd87KMJDVk3CWpIeMuSQ0Zd0lqyLhLUkPGXZIaMu6S1JBxl6SGHogPMT0sdhz9ynqP0MrbLzyz3iNIbXnmLkkNGXdJasi4S1JDxl2SGjLuktSQcZekhoy7JDVk3CWpIeMuSQ0Zd0lqyLhLUkPGXZIaMu6S1JBxl6SGjLskNWTcJakh4y5JDRl3SWrIuEtSQ8Zdkhoy7pLUkHGXpIaMuyQ1ZNwlqSHjLkkNGXdJamisuCf5rSTnk/xTki8m+aEkTyZ5Jcml4XbTyP5jSS4nuZhk3+TGlyQtZcW4J9kK/CYwU1U/A2wADgJHgbNVNQ2cHR6TZNdwfDewH3gxyYbJjC9JWsq4l2U2Aj+cZCPwPuA6cAA4ORw/CTw73D8AnKqqW1V1BbgM7FmziSVJK1ox7lX1L8AfAFeBG8B/VtVfA5ur6saw5wbw9PCUrcC1kZeYG9YkSffJOJdlNrFwNr4T+ADw/iQfv9tTllirJV73cJLZJLPz8/PjzitJGsM4l2V+BbhSVfNV9V3gS8AvAu8k2QIw3N4c9s8B20eev42Fyzjfp6pOVNVMVc1MTU2t5muQJC0yTtyvAh9J8r4kAfYCF4AzwKFhzyHg5eH+GeBgkseT7ASmgXNrO7Yk6W42rrShql5L8hLwdeA28AZwAngCOJ3keRZ+ADw37D+f5DTw1rD/SFXdmdD8kqQlrBh3gKr6LPDZRcu3WDiLX2r/ceD46kaTJN0rP6EqSQ0Zd0lqyLhLUkPGXZIaMu6S1JBxl6SGjLskNWTcJakh4y5JDRl3SWrIuEtSQ8Zdkhoy7pLUkHGXpIaMuyQ1ZNwlqSHjLkkNGXdJasi4S1JDxl2SGjLuktSQcZekhoy7JDVk3CWpIeMuSQ0Zd0lqyLhLUkPGXZIaMu6S1JBxl6SGjLskNWTcJakh4y5JDRl3SWrIuEtSQ2PFPcmPJnkpyTeSXEjyC0meTPJKkkvD7aaR/ceSXE5yMcm+yY0vSVrKuGfufwx8tao+BPwscAE4Cpytqmng7PCYJLuAg8BuYD/wYpINaz24JGl5K8Y9yY8AvwR8HqCqvlNV/wEcAE4O204Czw73DwCnqupWVV0BLgN71nZsSdLdjHPm/uPAPPDnSd5I8rkk7wc2V9UNgOH26WH/VuDayPPnhjVJ0n0yTtw3Aj8H/GlVfRj4X4ZLMMvIEmv1rk3J4SSzSWbn5+fHGlaSNJ5x4j4HzFXVa8Pjl1iI/TtJtgAMtzdH9m8fef424PriF62qE1U1U1UzU1NT9zq/JGkJK8a9qv4VuJbkp4alvcBbwBng0LB2CHh5uH8GOJjk8SQ7gWng3JpOLUm6q41j7vsN4AtJHgO+CXyShR8Mp5M8D1wFngOoqvNJTrPwA+A2cKSq7qz55JKkZY0V96p6E5hZ4tDeZfYfB47f+1iSpNXwE6qS1JBxl6SGjLskNWTcJakh4y5JDRl3SWrIuEtSQ8Zdkhoy7pLUkHGXpIaMuyQ1ZNwlqSHjLkkNGXdJasi4S1JDxl2SGjLuktSQcZekhoy7JDVk3CWpIeMuSQ0Zd0lqyLhLUkPGXZIaMu6S1JBxl6SGjLskNWTcJakh4y5JDRl3SWrIuEtSQ8Zdkhoy7pLUkHGXpIaMuyQ1NHbck2xI8kaSLw+Pn0zySpJLw+2mkb3HklxOcjHJvkkMLkla3ns5c/80cGHk8VHgbFVNA2eHxyTZBRwEdgP7gReTbFibcSVJ4xgr7km2Ac8AnxtZPgCcHO6fBJ4dWT9VVbeq6gpwGdizJtNKksYy7pn7HwG/A3xvZG1zVd0AGG6fHta3AtdG9s0Na5Kk+2TFuCf5NeBmVb0+5mtmibVa4nUPJ5lNMjs/Pz/mS0uSxjHOmftHgV9P8jZwCvjlJH8BvJNkC8Bwe3PYPwdsH3n+NuD64hetqhNVNVNVM1NTU6v4EiRJi60Y96o6VlXbqmoHC/9R+jdV9XHgDHBo2HYIeHm4fwY4mOTxJDuBaeDcmk8uSVrWxlU89wXgdJLngavAcwBVdT7JaeAt4DZwpKrurHpSSdLY3lPcq+pV4NXh/r8Be5fZdxw4vsrZJEn3yE+oSlJDxl2SGjLuktTQav5DVdIDZMfRr6z3CG28/cIz6z3CqnnmLkkNGXdJasi4S1JDxl2SGjLuktSQcZekhoy7JDVk3CWpIeMuSQ0Zd0lqyLhLUkPGXZIaMu6S1JBxl6SGjLskNWTcJakh4y5JDRl3SWrIuEtSQ8Zdkhoy7pLUkHGXpIaMuyQ1ZNwlqSHjLkkNGXdJasi4S1JDxl2SGjLuktSQcZekhoy7JDW0YtyTbE/yt0kuJDmf5NPD+pNJXklyabjdNPKcY0kuJ7mYZN8kvwBJ0ruNc+Z+G/jtqvpp4CPAkSS7gKPA2aqaBs4OjxmOHQR2A/uBF5NsmMTwkqSlrRj3qrpRVV8f7v83cAHYChwATg7bTgLPDvcPAKeq6lZVXQEuA3vWeG5J0l28p2vuSXYAHwZeAzZX1Q1Y+AEAPD1s2wpcG3na3LAmSbpPxo57kieAvwQ+U1X/dbetS6zVEq93OMlsktn5+flxx5AkjWGsuCf5QRbC/oWq+tKw/E6SLcPxLcDNYX0O2D7y9G3A9cWvWVUnqmqmqmampqbudX5J0hLG+W2ZAJ8HLlTVH44cOgMcGu4fAl4eWT+Y5PEkO4Fp4NzajSxJWsnGMfZ8FPgE8I9J3hzWfg94ATid5HngKvAcQFWdT3IaeIuF37Q5UlV31npwSdLyVox7Vf0dS19HB9i7zHOOA8dXMZckaRX8hKokNWTcJakh4y5JDRl3SWrIuEtSQ8Zdkhoy7pLUkHGXpIaMuyQ1ZNwlqSHjLkkNGXdJasi4S1JDxl2SGjLuktSQcZekhoy7JDVk3CWpIeMuSQ0Zd0lqyLhLUkPGXZIaMu6S1JBxl6SGjLskNWTcJakh4y5JDRl3SWrIuEtSQ8Zdkhoy7pLUkHGXpIaMuyQ1ZNwlqSHjLkkNGXdJamhicU+yP8nFJJeTHJ3U+0iS3m0icU+yAfgT4FeBXcDHkuyaxHtJkt5tUmfue4DLVfXNqvoOcAo4MKH3kiQtsnFCr7sVuDbyeA74+dENSQ4Dh4eH/5Pk4oRmeRQ9BXx7vYdYSX5/vSfQOvB7c2392HIHJhX3LLFW3/eg6gRwYkLv/0hLMltVM+s9h7SY35v3z6Quy8wB20cebwOuT+i9JEmLTCruXwOmk+xM8hhwEDgzofeSJC0ykcsyVXU7yaeAvwI2AH9WVecn8V5akpe79KDye/M+SVWtvEuS9FDxE6qS1JBxl6SGjLskNTSp33PXfZTkQyx8AngrC58nuA6cqaoL6zqYpHXjmftDLsnvsvDnHQKcY+HXUAN80T/YpgdZkk+u9wyd+dsyD7kk/wzsrqrvLlp/DDhfVdPrM5l0d0muVtUH13uOrrws8/D7HvAB4FuL1rcMx6R1k+QfljsEbL6fszxqjPvD7zPA2SSX+P8/1vZB4CeAT63XUNJgM7AP+PdF6wH+/v6P8+gw7g+5qvpqkp9k4c8sb2XhH80c8LWqurOuw0nwZeCJqnpz8YEkr973aR4hXnOXpIb8bRlJasi4S1JDxl2SGjLuktSQcZekhv4PQ6ha+mMPLsIAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Ips'].value_counts().plot(kind='bar')\n",
    "\n",
    "#ploting chart to check the  number of computer having Ips or not "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "ced41ab2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Ips', ylabel='Price'>"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(x=df['Ips'],y=df['Price'])\n",
    "\n",
    "#to check relation between the Ips with the price"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "c7185873",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Inches         0.068197\n",
       "Ram            0.743007\n",
       "Weight         0.210370\n",
       "Price          1.000000\n",
       "Touchscreen    0.191226\n",
       "Ips            0.252208\n",
       "Name: Price, dtype: float64"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.corr()['Price']\n",
    "#finding the correlation between the price and the other elements"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "18f0b8b1",
   "metadata": {},
   "outputs": [],
   "source": [
    "new = df['ScreenResolution'].str.split('x',n=1,expand=True)\n",
    "# making a temperary dataframe for storing the valuue of the screenresolution column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "e7b73d40",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>IPS Panel Retina Display 2560</td>\n",
       "      <td>1600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1440</td>\n",
       "      <td>900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Full HD 1920</td>\n",
       "      <td>1080</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>IPS Panel Retina Display 2880</td>\n",
       "      <td>1800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>IPS Panel Retina Display 2560</td>\n",
       "      <td>1600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1298</th>\n",
       "      <td>IPS Panel Full HD / Touchscreen 1920</td>\n",
       "      <td>1080</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1299</th>\n",
       "      <td>IPS Panel Quad HD+ / Touchscreen 3200</td>\n",
       "      <td>1800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1300</th>\n",
       "      <td>1366</td>\n",
       "      <td>768</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1301</th>\n",
       "      <td>1366</td>\n",
       "      <td>768</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1302</th>\n",
       "      <td>1366</td>\n",
       "      <td>768</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1303 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          0     1\n",
       "0             IPS Panel Retina Display 2560  1600\n",
       "1                                      1440   900\n",
       "2                              Full HD 1920  1080\n",
       "3             IPS Panel Retina Display 2880  1800\n",
       "4             IPS Panel Retina Display 2560  1600\n",
       "...                                     ...   ...\n",
       "1298   IPS Panel Full HD / Touchscreen 1920  1080\n",
       "1299  IPS Panel Quad HD+ / Touchscreen 3200  1800\n",
       "1300                                   1366   768\n",
       "1301                                   1366   768\n",
       "1302                                   1366   768\n",
       "\n",
       "[1303 rows x 2 columns]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "5daee5d5",
   "metadata": {},
   "outputs": [],
   "source": [
    "# feature engieering \n",
    "df['X_res'] = new[0]\n",
    "df['Y_res'] = new[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "b2a323f9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>Ips</th>\n",
       "      <th>X_res</th>\n",
       "      <th>Y_res</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 2.3GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>IPS Panel Retina Display 2560</td>\n",
       "      <td>1600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>Intel Core i5 1.8GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1440</td>\n",
       "      <td>900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Full HD 1920</td>\n",
       "      <td>1080</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>Intel Core i7 2.7GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>IPS Panel Retina Display 2880</td>\n",
       "      <td>1800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 3.1GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>IPS Panel Retina Display 2560</td>\n",
       "      <td>1600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1298</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>2 in 1 Convertible</td>\n",
       "      <td>14.0</td>\n",
       "      <td>IPS Panel Full HD / Touchscreen 1920x1080</td>\n",
       "      <td>Intel Core i7 6500U 2.5GHz</td>\n",
       "      <td>4</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel HD Graphics 520</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.80</td>\n",
       "      <td>33992.6400</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>IPS Panel Full HD / Touchscreen 1920</td>\n",
       "      <td>1080</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1299</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>2 in 1 Convertible</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Quad HD+ / Touchscreen 3200x1800</td>\n",
       "      <td>Intel Core i7 6500U 2.5GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>Intel HD Graphics 520</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.30</td>\n",
       "      <td>79866.7200</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>IPS Panel Quad HD+ / Touchscreen 3200</td>\n",
       "      <td>1800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1300</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>14.0</td>\n",
       "      <td>1366x768</td>\n",
       "      <td>Intel Celeron Dual Core N3050 1.6GHz</td>\n",
       "      <td>2</td>\n",
       "      <td>64GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.50</td>\n",
       "      <td>12201.1200</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1366</td>\n",
       "      <td>768</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1301</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>1366x768</td>\n",
       "      <td>Intel Core i7 6500U 2.5GHz</td>\n",
       "      <td>6</td>\n",
       "      <td>1TB HDD</td>\n",
       "      <td>AMD Radeon R5 M330</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.19</td>\n",
       "      <td>40705.9200</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1366</td>\n",
       "      <td>768</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1302</th>\n",
       "      <td>Asus</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>1366x768</td>\n",
       "      <td>Intel Celeron Dual Core N3050 1.6GHz</td>\n",
       "      <td>4</td>\n",
       "      <td>500GB HDD</td>\n",
       "      <td>Intel HD Graphics</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.20</td>\n",
       "      <td>19660.3200</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1366</td>\n",
       "      <td>768</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1303 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Company            TypeName  Inches  \\\n",
       "0      Apple           Ultrabook    13.3   \n",
       "1      Apple           Ultrabook    13.3   \n",
       "2         HP            Notebook    15.6   \n",
       "3      Apple           Ultrabook    15.4   \n",
       "4      Apple           Ultrabook    13.3   \n",
       "...      ...                 ...     ...   \n",
       "1298  Lenovo  2 in 1 Convertible    14.0   \n",
       "1299  Lenovo  2 in 1 Convertible    13.3   \n",
       "1300  Lenovo            Notebook    14.0   \n",
       "1301      HP            Notebook    15.6   \n",
       "1302    Asus            Notebook    15.6   \n",
       "\n",
       "                                ScreenResolution  \\\n",
       "0             IPS Panel Retina Display 2560x1600   \n",
       "1                                       1440x900   \n",
       "2                              Full HD 1920x1080   \n",
       "3             IPS Panel Retina Display 2880x1800   \n",
       "4             IPS Panel Retina Display 2560x1600   \n",
       "...                                          ...   \n",
       "1298   IPS Panel Full HD / Touchscreen 1920x1080   \n",
       "1299  IPS Panel Quad HD+ / Touchscreen 3200x1800   \n",
       "1300                                    1366x768   \n",
       "1301                                    1366x768   \n",
       "1302                                    1366x768   \n",
       "\n",
       "                                       Cpu  Ram               Memory  \\\n",
       "0                     Intel Core i5 2.3GHz    8            128GB SSD   \n",
       "1                     Intel Core i5 1.8GHz    8  128GB Flash Storage   \n",
       "2               Intel Core i5 7200U 2.5GHz    8            256GB SSD   \n",
       "3                     Intel Core i7 2.7GHz   16            512GB SSD   \n",
       "4                     Intel Core i5 3.1GHz    8            256GB SSD   \n",
       "...                                    ...  ...                  ...   \n",
       "1298            Intel Core i7 6500U 2.5GHz    4            128GB SSD   \n",
       "1299            Intel Core i7 6500U 2.5GHz   16            512GB SSD   \n",
       "1300  Intel Celeron Dual Core N3050 1.6GHz    2   64GB Flash Storage   \n",
       "1301            Intel Core i7 6500U 2.5GHz    6              1TB HDD   \n",
       "1302  Intel Celeron Dual Core N3050 1.6GHz    4            500GB HDD   \n",
       "\n",
       "                               Gpu       OpSys  Weight        Price  \\\n",
       "0     Intel Iris Plus Graphics 640       macOS    1.37   71378.6832   \n",
       "1           Intel HD Graphics 6000       macOS    1.34   47895.5232   \n",
       "2            Intel HD Graphics 620       No OS    1.86   30636.0000   \n",
       "3               AMD Radeon Pro 455       macOS    1.83  135195.3360   \n",
       "4     Intel Iris Plus Graphics 650       macOS    1.37   96095.8080   \n",
       "...                            ...         ...     ...          ...   \n",
       "1298         Intel HD Graphics 520  Windows 10    1.80   33992.6400   \n",
       "1299         Intel HD Graphics 520  Windows 10    1.30   79866.7200   \n",
       "1300             Intel HD Graphics  Windows 10    1.50   12201.1200   \n",
       "1301            AMD Radeon R5 M330  Windows 10    2.19   40705.9200   \n",
       "1302             Intel HD Graphics  Windows 10    2.20   19660.3200   \n",
       "\n",
       "      Touchscreen  Ips                                  X_res Y_res  \n",
       "0               0    1          IPS Panel Retina Display 2560  1600  \n",
       "1               0    0                                   1440   900  \n",
       "2               0    0                           Full HD 1920  1080  \n",
       "3               0    1          IPS Panel Retina Display 2880  1800  \n",
       "4               0    1          IPS Panel Retina Display 2560  1600  \n",
       "...           ...  ...                                    ...   ...  \n",
       "1298            1    1   IPS Panel Full HD / Touchscreen 1920  1080  \n",
       "1299            1    1  IPS Panel Quad HD+ / Touchscreen 3200  1800  \n",
       "1300            0    0                                   1366   768  \n",
       "1301            0    0                                   1366   768  \n",
       "1302            0    0                                   1366   768  \n",
       "\n",
       "[1303 rows x 15 columns]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "923a39b0",
   "metadata": {},
   "outputs": [],
   "source": [
    "#replacing the all the raw strinf with the digit\n",
    "#using the pattern (r'(\\d+\\.?\\d+)')\n",
    "\n",
    "df['X_res']=df['X_res'].str.replace(',','').str.findall(r'(\\d+\\.?\\d+)').apply(lambda x:x[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "13f00c0d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>Ips</th>\n",
       "      <th>X_res</th>\n",
       "      <th>Y_res</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 2.3GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>Intel Core i5 1.8GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1440</td>\n",
       "      <td>900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1920</td>\n",
       "      <td>1080</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>Intel Core i7 2.7GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2880</td>\n",
       "      <td>1800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 3.1GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1298</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>2 in 1 Convertible</td>\n",
       "      <td>14.0</td>\n",
       "      <td>IPS Panel Full HD / Touchscreen 1920x1080</td>\n",
       "      <td>Intel Core i7 6500U 2.5GHz</td>\n",
       "      <td>4</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel HD Graphics 520</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.80</td>\n",
       "      <td>33992.6400</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1920</td>\n",
       "      <td>1080</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1299</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>2 in 1 Convertible</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Quad HD+ / Touchscreen 3200x1800</td>\n",
       "      <td>Intel Core i7 6500U 2.5GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>Intel HD Graphics 520</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.30</td>\n",
       "      <td>79866.7200</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3200</td>\n",
       "      <td>1800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1300</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>14.0</td>\n",
       "      <td>1366x768</td>\n",
       "      <td>Intel Celeron Dual Core N3050 1.6GHz</td>\n",
       "      <td>2</td>\n",
       "      <td>64GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.50</td>\n",
       "      <td>12201.1200</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1366</td>\n",
       "      <td>768</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1301</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>1366x768</td>\n",
       "      <td>Intel Core i7 6500U 2.5GHz</td>\n",
       "      <td>6</td>\n",
       "      <td>1TB HDD</td>\n",
       "      <td>AMD Radeon R5 M330</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.19</td>\n",
       "      <td>40705.9200</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1366</td>\n",
       "      <td>768</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1302</th>\n",
       "      <td>Asus</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>1366x768</td>\n",
       "      <td>Intel Celeron Dual Core N3050 1.6GHz</td>\n",
       "      <td>4</td>\n",
       "      <td>500GB HDD</td>\n",
       "      <td>Intel HD Graphics</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.20</td>\n",
       "      <td>19660.3200</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1366</td>\n",
       "      <td>768</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1303 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Company            TypeName  Inches  \\\n",
       "0      Apple           Ultrabook    13.3   \n",
       "1      Apple           Ultrabook    13.3   \n",
       "2         HP            Notebook    15.6   \n",
       "3      Apple           Ultrabook    15.4   \n",
       "4      Apple           Ultrabook    13.3   \n",
       "...      ...                 ...     ...   \n",
       "1298  Lenovo  2 in 1 Convertible    14.0   \n",
       "1299  Lenovo  2 in 1 Convertible    13.3   \n",
       "1300  Lenovo            Notebook    14.0   \n",
       "1301      HP            Notebook    15.6   \n",
       "1302    Asus            Notebook    15.6   \n",
       "\n",
       "                                ScreenResolution  \\\n",
       "0             IPS Panel Retina Display 2560x1600   \n",
       "1                                       1440x900   \n",
       "2                              Full HD 1920x1080   \n",
       "3             IPS Panel Retina Display 2880x1800   \n",
       "4             IPS Panel Retina Display 2560x1600   \n",
       "...                                          ...   \n",
       "1298   IPS Panel Full HD / Touchscreen 1920x1080   \n",
       "1299  IPS Panel Quad HD+ / Touchscreen 3200x1800   \n",
       "1300                                    1366x768   \n",
       "1301                                    1366x768   \n",
       "1302                                    1366x768   \n",
       "\n",
       "                                       Cpu  Ram               Memory  \\\n",
       "0                     Intel Core i5 2.3GHz    8            128GB SSD   \n",
       "1                     Intel Core i5 1.8GHz    8  128GB Flash Storage   \n",
       "2               Intel Core i5 7200U 2.5GHz    8            256GB SSD   \n",
       "3                     Intel Core i7 2.7GHz   16            512GB SSD   \n",
       "4                     Intel Core i5 3.1GHz    8            256GB SSD   \n",
       "...                                    ...  ...                  ...   \n",
       "1298            Intel Core i7 6500U 2.5GHz    4            128GB SSD   \n",
       "1299            Intel Core i7 6500U 2.5GHz   16            512GB SSD   \n",
       "1300  Intel Celeron Dual Core N3050 1.6GHz    2   64GB Flash Storage   \n",
       "1301            Intel Core i7 6500U 2.5GHz    6              1TB HDD   \n",
       "1302  Intel Celeron Dual Core N3050 1.6GHz    4            500GB HDD   \n",
       "\n",
       "                               Gpu       OpSys  Weight        Price  \\\n",
       "0     Intel Iris Plus Graphics 640       macOS    1.37   71378.6832   \n",
       "1           Intel HD Graphics 6000       macOS    1.34   47895.5232   \n",
       "2            Intel HD Graphics 620       No OS    1.86   30636.0000   \n",
       "3               AMD Radeon Pro 455       macOS    1.83  135195.3360   \n",
       "4     Intel Iris Plus Graphics 650       macOS    1.37   96095.8080   \n",
       "...                            ...         ...     ...          ...   \n",
       "1298         Intel HD Graphics 520  Windows 10    1.80   33992.6400   \n",
       "1299         Intel HD Graphics 520  Windows 10    1.30   79866.7200   \n",
       "1300             Intel HD Graphics  Windows 10    1.50   12201.1200   \n",
       "1301            AMD Radeon R5 M330  Windows 10    2.19   40705.9200   \n",
       "1302             Intel HD Graphics  Windows 10    2.20   19660.3200   \n",
       "\n",
       "      Touchscreen  Ips X_res Y_res  \n",
       "0               0    1  2560  1600  \n",
       "1               0    0  1440   900  \n",
       "2               0    0  1920  1080  \n",
       "3               0    1  2880  1800  \n",
       "4               0    1  2560  1600  \n",
       "...           ...  ...   ...   ...  \n",
       "1298            1    1  1920  1080  \n",
       "1299            1    1  3200  1800  \n",
       "1300            0    0  1366   768  \n",
       "1301            0    0  1366   768  \n",
       "1302            0    0  1366   768  \n",
       "\n",
       "[1303 rows x 15 columns]"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "80acec9b",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['X_res'] = df['X_res'].astype('int')\n",
    "df['Y_res'] = df['Y_res'].astype('int')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "41b6c1aa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1303 entries, 0 to 1302\n",
      "Data columns (total 15 columns):\n",
      " #   Column            Non-Null Count  Dtype  \n",
      "---  ------            --------------  -----  \n",
      " 0   Company           1303 non-null   object \n",
      " 1   TypeName          1303 non-null   object \n",
      " 2   Inches            1303 non-null   float64\n",
      " 3   ScreenResolution  1303 non-null   object \n",
      " 4   Cpu               1303 non-null   object \n",
      " 5   Ram               1303 non-null   int32  \n",
      " 6   Memory            1303 non-null   object \n",
      " 7   Gpu               1303 non-null   object \n",
      " 8   OpSys             1303 non-null   object \n",
      " 9   Weight            1303 non-null   float32\n",
      " 10  Price             1303 non-null   float64\n",
      " 11  Touchscreen       1303 non-null   int64  \n",
      " 12  Ips               1303 non-null   int64  \n",
      " 13  X_res             1303 non-null   int32  \n",
      " 14  Y_res             1303 non-null   int32  \n",
      "dtypes: float32(1), float64(2), int32(3), int64(2), object(7)\n",
      "memory usage: 132.5+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "4e4f3110",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Inches         0.068197\n",
       "Ram            0.743007\n",
       "Weight         0.210370\n",
       "Price          1.000000\n",
       "Touchscreen    0.191226\n",
       "Ips            0.252208\n",
       "X_res          0.556529\n",
       "Y_res          0.552809\n",
       "Name: Price, dtype: float64"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# FINDING THE CORRELATION OF PRICE WITH OTHER ELEMENT\n",
    "df.corr()['Price']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "08ae666b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# making the ppi column for the laptop data using the formula \n",
    "# ppi = sqrt(x)+sqt(y)/inches\n",
    "df['ppi'] = (((df['X_res']**2)+(df['Y_res']**2))**0.5/df['Inches']).astype('float')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "e23d0a2c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>Ips</th>\n",
       "      <th>X_res</th>\n",
       "      <th>Y_res</th>\n",
       "      <th>ppi</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 2.3GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "      <td>226.983005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>Intel Core i5 1.8GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1440</td>\n",
       "      <td>900</td>\n",
       "      <td>127.677940</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1920</td>\n",
       "      <td>1080</td>\n",
       "      <td>141.211998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>Intel Core i7 2.7GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2880</td>\n",
       "      <td>1800</td>\n",
       "      <td>220.534624</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 3.1GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "      <td>226.983005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1298</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>2 in 1 Convertible</td>\n",
       "      <td>14.0</td>\n",
       "      <td>IPS Panel Full HD / Touchscreen 1920x1080</td>\n",
       "      <td>Intel Core i7 6500U 2.5GHz</td>\n",
       "      <td>4</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel HD Graphics 520</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.80</td>\n",
       "      <td>33992.6400</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1920</td>\n",
       "      <td>1080</td>\n",
       "      <td>157.350512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1299</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>2 in 1 Convertible</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Quad HD+ / Touchscreen 3200x1800</td>\n",
       "      <td>Intel Core i7 6500U 2.5GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>Intel HD Graphics 520</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.30</td>\n",
       "      <td>79866.7200</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3200</td>\n",
       "      <td>1800</td>\n",
       "      <td>276.053530</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1300</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>14.0</td>\n",
       "      <td>1366x768</td>\n",
       "      <td>Intel Celeron Dual Core N3050 1.6GHz</td>\n",
       "      <td>2</td>\n",
       "      <td>64GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.50</td>\n",
       "      <td>12201.1200</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1366</td>\n",
       "      <td>768</td>\n",
       "      <td>111.935204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1301</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>1366x768</td>\n",
       "      <td>Intel Core i7 6500U 2.5GHz</td>\n",
       "      <td>6</td>\n",
       "      <td>1TB HDD</td>\n",
       "      <td>AMD Radeon R5 M330</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.19</td>\n",
       "      <td>40705.9200</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1366</td>\n",
       "      <td>768</td>\n",
       "      <td>100.454670</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1302</th>\n",
       "      <td>Asus</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>1366x768</td>\n",
       "      <td>Intel Celeron Dual Core N3050 1.6GHz</td>\n",
       "      <td>4</td>\n",
       "      <td>500GB HDD</td>\n",
       "      <td>Intel HD Graphics</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.20</td>\n",
       "      <td>19660.3200</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1366</td>\n",
       "      <td>768</td>\n",
       "      <td>100.454670</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1303 rows × 16 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Company            TypeName  Inches  \\\n",
       "0      Apple           Ultrabook    13.3   \n",
       "1      Apple           Ultrabook    13.3   \n",
       "2         HP            Notebook    15.6   \n",
       "3      Apple           Ultrabook    15.4   \n",
       "4      Apple           Ultrabook    13.3   \n",
       "...      ...                 ...     ...   \n",
       "1298  Lenovo  2 in 1 Convertible    14.0   \n",
       "1299  Lenovo  2 in 1 Convertible    13.3   \n",
       "1300  Lenovo            Notebook    14.0   \n",
       "1301      HP            Notebook    15.6   \n",
       "1302    Asus            Notebook    15.6   \n",
       "\n",
       "                                ScreenResolution  \\\n",
       "0             IPS Panel Retina Display 2560x1600   \n",
       "1                                       1440x900   \n",
       "2                              Full HD 1920x1080   \n",
       "3             IPS Panel Retina Display 2880x1800   \n",
       "4             IPS Panel Retina Display 2560x1600   \n",
       "...                                          ...   \n",
       "1298   IPS Panel Full HD / Touchscreen 1920x1080   \n",
       "1299  IPS Panel Quad HD+ / Touchscreen 3200x1800   \n",
       "1300                                    1366x768   \n",
       "1301                                    1366x768   \n",
       "1302                                    1366x768   \n",
       "\n",
       "                                       Cpu  Ram               Memory  \\\n",
       "0                     Intel Core i5 2.3GHz    8            128GB SSD   \n",
       "1                     Intel Core i5 1.8GHz    8  128GB Flash Storage   \n",
       "2               Intel Core i5 7200U 2.5GHz    8            256GB SSD   \n",
       "3                     Intel Core i7 2.7GHz   16            512GB SSD   \n",
       "4                     Intel Core i5 3.1GHz    8            256GB SSD   \n",
       "...                                    ...  ...                  ...   \n",
       "1298            Intel Core i7 6500U 2.5GHz    4            128GB SSD   \n",
       "1299            Intel Core i7 6500U 2.5GHz   16            512GB SSD   \n",
       "1300  Intel Celeron Dual Core N3050 1.6GHz    2   64GB Flash Storage   \n",
       "1301            Intel Core i7 6500U 2.5GHz    6              1TB HDD   \n",
       "1302  Intel Celeron Dual Core N3050 1.6GHz    4            500GB HDD   \n",
       "\n",
       "                               Gpu       OpSys  Weight        Price  \\\n",
       "0     Intel Iris Plus Graphics 640       macOS    1.37   71378.6832   \n",
       "1           Intel HD Graphics 6000       macOS    1.34   47895.5232   \n",
       "2            Intel HD Graphics 620       No OS    1.86   30636.0000   \n",
       "3               AMD Radeon Pro 455       macOS    1.83  135195.3360   \n",
       "4     Intel Iris Plus Graphics 650       macOS    1.37   96095.8080   \n",
       "...                            ...         ...     ...          ...   \n",
       "1298         Intel HD Graphics 520  Windows 10    1.80   33992.6400   \n",
       "1299         Intel HD Graphics 520  Windows 10    1.30   79866.7200   \n",
       "1300             Intel HD Graphics  Windows 10    1.50   12201.1200   \n",
       "1301            AMD Radeon R5 M330  Windows 10    2.19   40705.9200   \n",
       "1302             Intel HD Graphics  Windows 10    2.20   19660.3200   \n",
       "\n",
       "      Touchscreen  Ips  X_res  Y_res         ppi  \n",
       "0               0    1   2560   1600  226.983005  \n",
       "1               0    0   1440    900  127.677940  \n",
       "2               0    0   1920   1080  141.211998  \n",
       "3               0    1   2880   1800  220.534624  \n",
       "4               0    1   2560   1600  226.983005  \n",
       "...           ...  ...    ...    ...         ...  \n",
       "1298            1    1   1920   1080  157.350512  \n",
       "1299            1    1   3200   1800  276.053530  \n",
       "1300            0    0   1366    768  111.935204  \n",
       "1301            0    0   1366    768  100.454670  \n",
       "1302            0    0   1366    768  100.454670  \n",
       "\n",
       "[1303 rows x 16 columns]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "86c73b86",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Inches         0.068197\n",
       "Ram            0.743007\n",
       "Weight         0.210370\n",
       "Price          1.000000\n",
       "Touchscreen    0.191226\n",
       "Ips            0.252208\n",
       "X_res          0.556529\n",
       "Y_res          0.552809\n",
       "ppi            0.473487\n",
       "Name: Price, dtype: float64"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.corr()['Price']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "e94490fa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>Ips</th>\n",
       "      <th>ppi</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>Intel Core i5 2.3GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>Intel Core i5 1.8GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>127.677940</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>Intel Core i7 2.7GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>220.534624</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>Intel Core i5 3.1GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1298</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>2 in 1 Convertible</td>\n",
       "      <td>Intel Core i7 6500U 2.5GHz</td>\n",
       "      <td>4</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel HD Graphics 520</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.80</td>\n",
       "      <td>33992.6400</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>157.350512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1299</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>2 in 1 Convertible</td>\n",
       "      <td>Intel Core i7 6500U 2.5GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>Intel HD Graphics 520</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.30</td>\n",
       "      <td>79866.7200</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>276.053530</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1300</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>Intel Celeron Dual Core N3050 1.6GHz</td>\n",
       "      <td>2</td>\n",
       "      <td>64GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.50</td>\n",
       "      <td>12201.1200</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>111.935204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1301</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>Intel Core i7 6500U 2.5GHz</td>\n",
       "      <td>6</td>\n",
       "      <td>1TB HDD</td>\n",
       "      <td>AMD Radeon R5 M330</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.19</td>\n",
       "      <td>40705.9200</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1302</th>\n",
       "      <td>Asus</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>Intel Celeron Dual Core N3050 1.6GHz</td>\n",
       "      <td>4</td>\n",
       "      <td>500GB HDD</td>\n",
       "      <td>Intel HD Graphics</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.20</td>\n",
       "      <td>19660.3200</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1303 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Company            TypeName                                   Cpu  Ram  \\\n",
       "0      Apple           Ultrabook                  Intel Core i5 2.3GHz    8   \n",
       "1      Apple           Ultrabook                  Intel Core i5 1.8GHz    8   \n",
       "2         HP            Notebook            Intel Core i5 7200U 2.5GHz    8   \n",
       "3      Apple           Ultrabook                  Intel Core i7 2.7GHz   16   \n",
       "4      Apple           Ultrabook                  Intel Core i5 3.1GHz    8   \n",
       "...      ...                 ...                                   ...  ...   \n",
       "1298  Lenovo  2 in 1 Convertible            Intel Core i7 6500U 2.5GHz    4   \n",
       "1299  Lenovo  2 in 1 Convertible            Intel Core i7 6500U 2.5GHz   16   \n",
       "1300  Lenovo            Notebook  Intel Celeron Dual Core N3050 1.6GHz    2   \n",
       "1301      HP            Notebook            Intel Core i7 6500U 2.5GHz    6   \n",
       "1302    Asus            Notebook  Intel Celeron Dual Core N3050 1.6GHz    4   \n",
       "\n",
       "                   Memory                           Gpu       OpSys  Weight  \\\n",
       "0               128GB SSD  Intel Iris Plus Graphics 640       macOS    1.37   \n",
       "1     128GB Flash Storage        Intel HD Graphics 6000       macOS    1.34   \n",
       "2               256GB SSD         Intel HD Graphics 620       No OS    1.86   \n",
       "3               512GB SSD            AMD Radeon Pro 455       macOS    1.83   \n",
       "4               256GB SSD  Intel Iris Plus Graphics 650       macOS    1.37   \n",
       "...                   ...                           ...         ...     ...   \n",
       "1298            128GB SSD         Intel HD Graphics 520  Windows 10    1.80   \n",
       "1299            512GB SSD         Intel HD Graphics 520  Windows 10    1.30   \n",
       "1300   64GB Flash Storage             Intel HD Graphics  Windows 10    1.50   \n",
       "1301              1TB HDD            AMD Radeon R5 M330  Windows 10    2.19   \n",
       "1302            500GB HDD             Intel HD Graphics  Windows 10    2.20   \n",
       "\n",
       "            Price  Touchscreen  Ips         ppi  \n",
       "0      71378.6832            0    1  226.983005  \n",
       "1      47895.5232            0    0  127.677940  \n",
       "2      30636.0000            0    0  141.211998  \n",
       "3     135195.3360            0    1  220.534624  \n",
       "4      96095.8080            0    1  226.983005  \n",
       "...           ...          ...  ...         ...  \n",
       "1298   33992.6400            1    1  157.350512  \n",
       "1299   79866.7200            1    1  276.053530  \n",
       "1300   12201.1200            0    0  111.935204  \n",
       "1301   40705.9200            0    0  100.454670  \n",
       "1302   19660.3200            0    0  100.454670  \n",
       "\n",
       "[1303 rows x 12 columns]"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#dropping the column of the data set\n",
    "\n",
    "df.drop(columns=['Inches','X_res','Y_res','ScreenResolution'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "c00b7970",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Intel Core i5 7200U 2.5GHz       190\n",
       "Intel Core i7 7700HQ 2.8GHz      146\n",
       "Intel Core i7 7500U 2.7GHz       134\n",
       "Intel Core i7 8550U 1.8GHz        73\n",
       "Intel Core i5 8250U 1.6GHz        72\n",
       "                                ... \n",
       "Intel Core M M3-6Y30 0.9GHz        1\n",
       "AMD A9-Series 9420 2.9GHz          1\n",
       "Intel Core i3 6006U 2.2GHz         1\n",
       "AMD A6-Series 7310 2GHz            1\n",
       "Intel Xeon E3-1535M v6 3.1GHz      1\n",
       "Name: Cpu, Length: 118, dtype: int64"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# no checking the cpu column to extract the useful information such as processor\n",
    "df['Cpu'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "411ab499",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Doing the feature engineering for the Cpu column\n",
    "# making 5 category for the i3,i5,i7,AMD, and other intel processor \n",
    "\n",
    "#Feature Engineering "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "0cc9032c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0                         [Intel, Core, i5, 2.3GHz]\n",
       "1                         [Intel, Core, i5, 1.8GHz]\n",
       "2                  [Intel, Core, i5, 7200U, 2.5GHz]\n",
       "3                         [Intel, Core, i7, 2.7GHz]\n",
       "4                         [Intel, Core, i5, 3.1GHz]\n",
       "                           ...                     \n",
       "1298               [Intel, Core, i7, 6500U, 2.5GHz]\n",
       "1299               [Intel, Core, i7, 6500U, 2.5GHz]\n",
       "1300    [Intel, Celeron, Dual, Core, N3050, 1.6GHz]\n",
       "1301               [Intel, Core, i7, 6500U, 2.5GHz]\n",
       "1302    [Intel, Celeron, Dual, Core, N3050, 1.6GHz]\n",
       "Name: Cpu, Length: 1303, dtype: object"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Cpu'].apply(lambda x:x.split())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "5dc12395",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Cpu Name']=df['Cpu'].apply(lambda x:\" \".join(x.split()[0:3]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "32523f77",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>Ips</th>\n",
       "      <th>X_res</th>\n",
       "      <th>Y_res</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu Name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 2.3GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>Intel Core i5 1.8GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1440</td>\n",
       "      <td>900</td>\n",
       "      <td>127.677940</td>\n",
       "      <td>Intel Core i5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1920</td>\n",
       "      <td>1080</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>Intel Core i7 2.7GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2880</td>\n",
       "      <td>1800</td>\n",
       "      <td>220.534624</td>\n",
       "      <td>Intel Core i7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 3.1GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Inches                    ScreenResolution  \\\n",
       "0   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "1   Apple  Ultrabook    13.3                            1440x900   \n",
       "2      HP   Notebook    15.6                   Full HD 1920x1080   \n",
       "3   Apple  Ultrabook    15.4  IPS Panel Retina Display 2880x1800   \n",
       "4   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "\n",
       "                          Cpu  Ram               Memory  \\\n",
       "0        Intel Core i5 2.3GHz    8            128GB SSD   \n",
       "1        Intel Core i5 1.8GHz    8  128GB Flash Storage   \n",
       "2  Intel Core i5 7200U 2.5GHz    8            256GB SSD   \n",
       "3        Intel Core i7 2.7GHz   16            512GB SSD   \n",
       "4        Intel Core i5 3.1GHz    8            256GB SSD   \n",
       "\n",
       "                            Gpu  OpSys  Weight        Price  Touchscreen  Ips  \\\n",
       "0  Intel Iris Plus Graphics 640  macOS    1.37   71378.6832            0    1   \n",
       "1        Intel HD Graphics 6000  macOS    1.34   47895.5232            0    0   \n",
       "2         Intel HD Graphics 620  No OS    1.86   30636.0000            0    0   \n",
       "3            AMD Radeon Pro 455  macOS    1.83  135195.3360            0    1   \n",
       "4  Intel Iris Plus Graphics 650  macOS    1.37   96095.8080            0    1   \n",
       "\n",
       "   X_res  Y_res         ppi       Cpu Name  \n",
       "0   2560   1600  226.983005  Intel Core i5  \n",
       "1   1440    900  127.677940  Intel Core i5  \n",
       "2   1920   1080  141.211998  Intel Core i5  \n",
       "3   2880   1800  220.534624  Intel Core i7  \n",
       "4   2560   1600  226.983005  Intel Core i5  "
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "18cc7926",
   "metadata": {},
   "source": [
    "# Function to check my laptop processor is of which type"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "49cd1b95",
   "metadata": {},
   "outputs": [],
   "source": [
    "def fetch_processor(text):\n",
    "    if text == 'Intel Core i7' or text == 'Intel Core i5' or text == 'Intel Core i3':\n",
    "        return text\n",
    "    else:\n",
    "        if text.split()[0] == 'Intel' :\n",
    "            return 'Other Intel Processor'\n",
    "        else:\n",
    "            return 'AMD Processor'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "ef0f9369",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Cpu brand'] = df['Cpu Name'].apply(fetch_processor)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "9f099bab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>Ips</th>\n",
       "      <th>X_res</th>\n",
       "      <th>Y_res</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu Name</th>\n",
       "      <th>Cpu brand</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 2.3GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>Intel Core i5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>Intel Core i5 1.8GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1440</td>\n",
       "      <td>900</td>\n",
       "      <td>127.677940</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>Intel Core i5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1920</td>\n",
       "      <td>1080</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>Intel Core i5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>Intel Core i7 2.7GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2880</td>\n",
       "      <td>1800</td>\n",
       "      <td>220.534624</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>Intel Core i7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 3.1GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>Intel Core i5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Inches                    ScreenResolution  \\\n",
       "0   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "1   Apple  Ultrabook    13.3                            1440x900   \n",
       "2      HP   Notebook    15.6                   Full HD 1920x1080   \n",
       "3   Apple  Ultrabook    15.4  IPS Panel Retina Display 2880x1800   \n",
       "4   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "\n",
       "                          Cpu  Ram               Memory  \\\n",
       "0        Intel Core i5 2.3GHz    8            128GB SSD   \n",
       "1        Intel Core i5 1.8GHz    8  128GB Flash Storage   \n",
       "2  Intel Core i5 7200U 2.5GHz    8            256GB SSD   \n",
       "3        Intel Core i7 2.7GHz   16            512GB SSD   \n",
       "4        Intel Core i5 3.1GHz    8            256GB SSD   \n",
       "\n",
       "                            Gpu  OpSys  Weight        Price  Touchscreen  Ips  \\\n",
       "0  Intel Iris Plus Graphics 640  macOS    1.37   71378.6832            0    1   \n",
       "1        Intel HD Graphics 6000  macOS    1.34   47895.5232            0    0   \n",
       "2         Intel HD Graphics 620  No OS    1.86   30636.0000            0    0   \n",
       "3            AMD Radeon Pro 455  macOS    1.83  135195.3360            0    1   \n",
       "4  Intel Iris Plus Graphics 650  macOS    1.37   96095.8080            0    1   \n",
       "\n",
       "   X_res  Y_res         ppi       Cpu Name      Cpu brand  \n",
       "0   2560   1600  226.983005  Intel Core i5  Intel Core i5  \n",
       "1   1440    900  127.677940  Intel Core i5  Intel Core i5  \n",
       "2   1920   1080  141.211998  Intel Core i5  Intel Core i5  \n",
       "3   2880   1800  220.534624  Intel Core i7  Intel Core i7  \n",
       "4   2560   1600  226.983005  Intel Core i5  Intel Core i5  "
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "b44baf1a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Cpu brand'].value_counts().plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "5a3e940a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(x=df['Cpu brand'],y=df['Price'])\n",
    "plt.xticks(rotation='vertical')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "09a5fd2a",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(columns=['Cpu','Cpu Name'],inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "f4158bfd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>Ips</th>\n",
       "      <th>X_res</th>\n",
       "      <th>Y_res</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu brand</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1440</td>\n",
       "      <td>900</td>\n",
       "      <td>127.677940</td>\n",
       "      <td>Intel Core i5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1920</td>\n",
       "      <td>1080</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2880</td>\n",
       "      <td>1800</td>\n",
       "      <td>220.534624</td>\n",
       "      <td>Intel Core i7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Inches                    ScreenResolution  Ram  \\\n",
       "0   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600    8   \n",
       "1   Apple  Ultrabook    13.3                            1440x900    8   \n",
       "2      HP   Notebook    15.6                   Full HD 1920x1080    8   \n",
       "3   Apple  Ultrabook    15.4  IPS Panel Retina Display 2880x1800   16   \n",
       "4   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600    8   \n",
       "\n",
       "                Memory                           Gpu  OpSys  Weight  \\\n",
       "0            128GB SSD  Intel Iris Plus Graphics 640  macOS    1.37   \n",
       "1  128GB Flash Storage        Intel HD Graphics 6000  macOS    1.34   \n",
       "2            256GB SSD         Intel HD Graphics 620  No OS    1.86   \n",
       "3            512GB SSD            AMD Radeon Pro 455  macOS    1.83   \n",
       "4            256GB SSD  Intel Iris Plus Graphics 650  macOS    1.37   \n",
       "\n",
       "         Price  Touchscreen  Ips  X_res  Y_res         ppi      Cpu brand  \n",
       "0   71378.6832            0    1   2560   1600  226.983005  Intel Core i5  \n",
       "1   47895.5232            0    0   1440    900  127.677940  Intel Core i5  \n",
       "2   30636.0000            0    0   1920   1080  141.211998  Intel Core i5  \n",
       "3  135195.3360            0    1   2880   1800  220.534624  Intel Core i7  \n",
       "4   96095.8080            0    1   2560   1600  226.983005  Intel Core i5  "
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "1c779ec7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "8     619\n",
       "4     375\n",
       "16    200\n",
       "6      41\n",
       "12     25\n",
       "2      22\n",
       "32     17\n",
       "24      3\n",
       "64      1\n",
       "Name: Ram, dtype: int64"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Ram'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "27323a26",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Ram'].value_counts().plot(kind= 'bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "e8969141",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Ram', ylabel='Price'>"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(x=df['Ram'],y=df['Price'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "f032e710",
   "metadata": {},
   "outputs": [],
   "source": [
    "# feature engineering on the memory column making 4 new column for hdd,ssd,hybrid and flash storage"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "d5378f06",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "256GB SSD                        412\n",
       "1TB HDD                          223\n",
       "500GB HDD                        132\n",
       "512GB SSD                        118\n",
       "128GB SSD +  1TB HDD              94\n",
       "128GB SSD                         76\n",
       "256GB SSD +  1TB HDD              73\n",
       "32GB Flash Storage                38\n",
       "2TB HDD                           16\n",
       "64GB Flash Storage                15\n",
       "512GB SSD +  1TB HDD              14\n",
       "1TB SSD                           14\n",
       "256GB SSD +  2TB HDD              10\n",
       "1.0TB Hybrid                       9\n",
       "256GB Flash Storage                8\n",
       "16GB Flash Storage                 7\n",
       "32GB SSD                           6\n",
       "180GB SSD                          5\n",
       "128GB Flash Storage                4\n",
       "512GB SSD +  2TB HDD               3\n",
       "16GB SSD                           3\n",
       "512GB Flash Storage                2\n",
       "1TB SSD +  1TB HDD                 2\n",
       "256GB SSD +  500GB HDD             2\n",
       "128GB SSD +  2TB HDD               2\n",
       "256GB SSD +  256GB SSD             2\n",
       "512GB SSD +  256GB SSD             1\n",
       "512GB SSD +  512GB SSD             1\n",
       "64GB Flash Storage +  1TB HDD      1\n",
       "1TB HDD +  1TB HDD                 1\n",
       "32GB HDD                           1\n",
       "64GB SSD                           1\n",
       "128GB HDD                          1\n",
       "240GB SSD                          1\n",
       "8GB SSD                            1\n",
       "508GB Hybrid                       1\n",
       "1.0TB HDD                          1\n",
       "512GB SSD +  1.0TB Hybrid          1\n",
       "256GB SSD +  1.0TB Hybrid          1\n",
       "Name: Memory, dtype: int64"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Memory'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "00559c45",
   "metadata": {},
   "source": [
    "# feature Engineeing on Memory column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "7e7c23ca",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Vinay\\AppData\\Local\\Temp\\ipykernel_12708\\4023190604.py:16: FutureWarning: The default value of regex will change from True to False in a future version.\n",
      "  df['first'] = df['first'].str.replace(r'\\D', '')\n",
      "C:\\Users\\Vinay\\AppData\\Local\\Temp\\ipykernel_12708\\4023190604.py:25: FutureWarning: The default value of regex will change from True to False in a future version.\n",
      "  df['second'] = df['second'].str.replace(r'\\D', '')\n"
     ]
    }
   ],
   "source": [
    "df['Memory'] = df['Memory'].astype(str).replace('\\.0', '', regex=True)\n",
    "df[\"Memory\"] = df[\"Memory\"].str.replace('GB', '')\n",
    "df[\"Memory\"] = df[\"Memory\"].str.replace('TB', '000')\n",
    "new = df[\"Memory\"].str.split(\"+\", n = 1, expand = True)\n",
    "\n",
    "df[\"first\"]= new[0]\n",
    "df[\"first\"]=df[\"first\"].str.strip()\n",
    "\n",
    "df[\"second\"]= new[1]\n",
    "\n",
    "df[\"Layer1HDD\"] = df[\"first\"].apply(lambda x: 1 if \"HDD\" in x else 0)\n",
    "df[\"Layer1SSD\"] = df[\"first\"].apply(lambda x: 1 if \"SSD\" in x else 0)\n",
    "df[\"Layer1Hybrid\"] = df[\"first\"].apply(lambda x: 1 if \"Hybrid\" in x else 0)\n",
    "df[\"Layer1Flash_Storage\"] = df[\"first\"].apply(lambda x: 1 if \"Flash Storage\" in x else 0)\n",
    "\n",
    "df['first'] = df['first'].str.replace(r'\\D', '')\n",
    "\n",
    "df[\"second\"].fillna(\"0\", inplace = True)\n",
    "\n",
    "df[\"Layer2HDD\"] = df[\"second\"].apply(lambda x: 1 if \"HDD\" in x else 0)\n",
    "df[\"Layer2SSD\"] = df[\"second\"].apply(lambda x: 1 if \"SSD\" in x else 0)\n",
    "df[\"Layer2Hybrid\"] = df[\"second\"].apply(lambda x: 1 if \"Hybrid\" in x else 0)\n",
    "df[\"Layer2Flash_Storage\"] = df[\"second\"].apply(lambda x: 1 if \"Flash Storage\" in x else 0)\n",
    "\n",
    "df['second'] = df['second'].str.replace(r'\\D', '')\n",
    "\n",
    "df[\"first\"] = df[\"first\"].astype(int)\n",
    "df[\"second\"] = df[\"second\"].astype(int)\n",
    "\n",
    "df[\"HDD\"]=(df[\"first\"]*df[\"Layer1HDD\"]+df[\"second\"]*df[\"Layer2HDD\"])\n",
    "df[\"SSD\"]=(df[\"first\"]*df[\"Layer1SSD\"]+df[\"second\"]*df[\"Layer2SSD\"])\n",
    "df[\"Hybrid\"]=(df[\"first\"]*df[\"Layer1Hybrid\"]+df[\"second\"]*df[\"Layer2Hybrid\"])\n",
    "df[\"Flash_Storage\"]=(df[\"first\"]*df[\"Layer1Flash_Storage\"]+df[\"second\"]*df[\"Layer2Flash_Storage\"])\n",
    "\n",
    "df.drop(columns=['first', 'second', 'Layer1HDD', 'Layer1SSD', 'Layer1Hybrid',\n",
    "       'Layer1Flash_Storage', 'Layer2HDD', 'Layer2SSD', 'Layer2Hybrid',\n",
    "       'Layer2Flash_Storage'],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "654e0498",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>Ips</th>\n",
       "      <th>X_res</th>\n",
       "      <th>Y_res</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu brand</th>\n",
       "      <th>HDD</th>\n",
       "      <th>SSD</th>\n",
       "      <th>Hybrid</th>\n",
       "      <th>Flash_Storage</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>338</th>\n",
       "      <td>Asus</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>1366x768</td>\n",
       "      <td>4</td>\n",
       "      <td>1000 HDD</td>\n",
       "      <td>Intel HD Graphics 500</td>\n",
       "      <td>Linux</td>\n",
       "      <td>2.00</td>\n",
       "      <td>14651.4672</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1366</td>\n",
       "      <td>768</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>Other Intel Processor</td>\n",
       "      <td>1000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>Dell</td>\n",
       "      <td>Gaming</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>8</td>\n",
       "      <td>256 SSD</td>\n",
       "      <td>Nvidia GeForce GTX 1060</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.65</td>\n",
       "      <td>63669.6000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1920</td>\n",
       "      <td>1080</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>542</th>\n",
       "      <td>HP</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Quad HD+ 3200x1800</td>\n",
       "      <td>8</td>\n",
       "      <td>256 SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.34</td>\n",
       "      <td>61005.6000</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3200</td>\n",
       "      <td>1800</td>\n",
       "      <td>276.053530</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1085</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>14.0</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>4</td>\n",
       "      <td>500 HDD</td>\n",
       "      <td>Intel HD Graphics 520</td>\n",
       "      <td>Windows 7</td>\n",
       "      <td>1.54</td>\n",
       "      <td>54931.1472</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1920</td>\n",
       "      <td>1080</td>\n",
       "      <td>157.350512</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>500</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1009</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>14.0</td>\n",
       "      <td>1366x768</td>\n",
       "      <td>4</td>\n",
       "      <td>500 HDD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.64</td>\n",
       "      <td>36443.5200</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1366</td>\n",
       "      <td>768</td>\n",
       "      <td>111.935204</td>\n",
       "      <td>Intel Core i3</td>\n",
       "      <td>500</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Company   TypeName  Inches              ScreenResolution  Ram    Memory  \\\n",
       "338     Asus   Notebook    15.6                      1366x768    4  1000 HDD   \n",
       "93      Dell     Gaming    15.6             Full HD 1920x1080    8   256 SSD   \n",
       "542       HP  Ultrabook    13.3  IPS Panel Quad HD+ 3200x1800    8   256 SSD   \n",
       "1085      HP   Notebook    14.0             Full HD 1920x1080    4   500 HDD   \n",
       "1009      HP   Notebook    14.0                      1366x768    4   500 HDD   \n",
       "\n",
       "                          Gpu       OpSys  Weight       Price  Touchscreen  \\\n",
       "338     Intel HD Graphics 500       Linux    2.00  14651.4672            0   \n",
       "93    Nvidia GeForce GTX 1060  Windows 10    2.65  63669.6000            0   \n",
       "542     Intel HD Graphics 620  Windows 10    1.34  61005.6000            0   \n",
       "1085    Intel HD Graphics 520   Windows 7    1.54  54931.1472            0   \n",
       "1009    Intel HD Graphics 620  Windows 10    1.64  36443.5200            0   \n",
       "\n",
       "      Ips  X_res  Y_res         ppi              Cpu brand   HDD  SSD  Hybrid  \\\n",
       "338     0   1366    768  100.454670  Other Intel Processor  1000    0       0   \n",
       "93      0   1920   1080  141.211998          Intel Core i5     0  256       0   \n",
       "542     1   3200   1800  276.053530          Intel Core i7     0  256       0   \n",
       "1085    0   1920   1080  157.350512          Intel Core i5   500    0       0   \n",
       "1009    0   1366    768  111.935204          Intel Core i3   500    0       0   \n",
       "\n",
       "      Flash_Storage  \n",
       "338               0  \n",
       "93                0  \n",
       "542               0  \n",
       "1085              0  \n",
       "1009              0  "
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sample(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "c22a26d2",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(columns=['Memory'],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "9e283a39",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>Ips</th>\n",
       "      <th>X_res</th>\n",
       "      <th>Y_res</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu brand</th>\n",
       "      <th>HDD</th>\n",
       "      <th>SSD</th>\n",
       "      <th>Hybrid</th>\n",
       "      <th>Flash_Storage</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1440</td>\n",
       "      <td>900</td>\n",
       "      <td>127.677940</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1920</td>\n",
       "      <td>1080</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>16</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2880</td>\n",
       "      <td>1800</td>\n",
       "      <td>220.534624</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Inches                    ScreenResolution  Ram  \\\n",
       "0   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600    8   \n",
       "1   Apple  Ultrabook    13.3                            1440x900    8   \n",
       "2      HP   Notebook    15.6                   Full HD 1920x1080    8   \n",
       "3   Apple  Ultrabook    15.4  IPS Panel Retina Display 2880x1800   16   \n",
       "4   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600    8   \n",
       "\n",
       "                            Gpu  OpSys  Weight        Price  Touchscreen  Ips  \\\n",
       "0  Intel Iris Plus Graphics 640  macOS    1.37   71378.6832            0    1   \n",
       "1        Intel HD Graphics 6000  macOS    1.34   47895.5232            0    0   \n",
       "2         Intel HD Graphics 620  No OS    1.86   30636.0000            0    0   \n",
       "3            AMD Radeon Pro 455  macOS    1.83  135195.3360            0    1   \n",
       "4  Intel Iris Plus Graphics 650  macOS    1.37   96095.8080            0    1   \n",
       "\n",
       "   X_res  Y_res         ppi      Cpu brand  HDD  SSD  Hybrid  Flash_Storage  \n",
       "0   2560   1600  226.983005  Intel Core i5    0  128       0              0  \n",
       "1   1440    900  127.677940  Intel Core i5    0    0       0            128  \n",
       "2   1920   1080  141.211998  Intel Core i5    0  256       0              0  \n",
       "3   2880   1800  220.534624  Intel Core i7    0  512       0              0  \n",
       "4   2560   1600  226.983005  Intel Core i5    0  256       0              0  "
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "e9ae110a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Inches           0.068197\n",
       "Ram              0.743007\n",
       "Weight           0.210370\n",
       "Price            1.000000\n",
       "Touchscreen      0.191226\n",
       "Ips              0.252208\n",
       "X_res            0.556529\n",
       "Y_res            0.552809\n",
       "ppi              0.473487\n",
       "HDD             -0.096441\n",
       "SSD              0.670799\n",
       "Hybrid           0.007989\n",
       "Flash_Storage   -0.040511\n",
       "Name: Price, dtype: float64"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.corr()['Price']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "d8189e99",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(columns=['Hybrid','Flash_Storage'],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "775b45bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>Ips</th>\n",
       "      <th>X_res</th>\n",
       "      <th>Y_res</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu brand</th>\n",
       "      <th>HDD</th>\n",
       "      <th>SSD</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1440</td>\n",
       "      <td>900</td>\n",
       "      <td>127.677940</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1920</td>\n",
       "      <td>1080</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>16</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2880</td>\n",
       "      <td>1800</td>\n",
       "      <td>220.534624</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Inches                    ScreenResolution  Ram  \\\n",
       "0   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600    8   \n",
       "1   Apple  Ultrabook    13.3                            1440x900    8   \n",
       "2      HP   Notebook    15.6                   Full HD 1920x1080    8   \n",
       "3   Apple  Ultrabook    15.4  IPS Panel Retina Display 2880x1800   16   \n",
       "4   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600    8   \n",
       "\n",
       "                            Gpu  OpSys  Weight        Price  Touchscreen  Ips  \\\n",
       "0  Intel Iris Plus Graphics 640  macOS    1.37   71378.6832            0    1   \n",
       "1        Intel HD Graphics 6000  macOS    1.34   47895.5232            0    0   \n",
       "2         Intel HD Graphics 620  No OS    1.86   30636.0000            0    0   \n",
       "3            AMD Radeon Pro 455  macOS    1.83  135195.3360            0    1   \n",
       "4  Intel Iris Plus Graphics 650  macOS    1.37   96095.8080            0    1   \n",
       "\n",
       "   X_res  Y_res         ppi      Cpu brand  HDD  SSD  \n",
       "0   2560   1600  226.983005  Intel Core i5    0  128  \n",
       "1   1440    900  127.677940  Intel Core i5    0    0  \n",
       "2   1920   1080  141.211998  Intel Core i5    0  256  \n",
       "3   2880   1800  220.534624  Intel Core i7    0  512  \n",
       "4   2560   1600  226.983005  Intel Core i5    0  256  "
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "21efca46",
   "metadata": {},
   "source": [
    "# Now Wokring on the Gpu data of the laptop"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "218a2386",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Intel HD Graphics 620      281\n",
       "Intel HD Graphics 520      185\n",
       "Intel UHD Graphics 620      68\n",
       "Nvidia GeForce GTX 1050     66\n",
       "Nvidia GeForce GTX 1060     48\n",
       "                          ... \n",
       "AMD Radeon R5 520            1\n",
       "AMD Radeon R7                1\n",
       "Intel HD Graphics 540        1\n",
       "AMD Radeon 540               1\n",
       "ARM Mali T860 MP4            1\n",
       "Name: Gpu, Length: 110, dtype: int64"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Gpu'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "b1a4397e",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Gpu brand'] = df['Gpu'].apply(lambda x:x.split()[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "d5efe4b6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>Ips</th>\n",
       "      <th>X_res</th>\n",
       "      <th>Y_res</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu brand</th>\n",
       "      <th>HDD</th>\n",
       "      <th>SSD</th>\n",
       "      <th>Gpu brand</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "      <td>Intel</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1440</td>\n",
       "      <td>900</td>\n",
       "      <td>127.677940</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1920</td>\n",
       "      <td>1080</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Intel</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>16</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2880</td>\n",
       "      <td>1800</td>\n",
       "      <td>220.534624</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "      <td>AMD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Intel</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Inches                    ScreenResolution  Ram  \\\n",
       "0   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600    8   \n",
       "1   Apple  Ultrabook    13.3                            1440x900    8   \n",
       "2      HP   Notebook    15.6                   Full HD 1920x1080    8   \n",
       "3   Apple  Ultrabook    15.4  IPS Panel Retina Display 2880x1800   16   \n",
       "4   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600    8   \n",
       "\n",
       "                            Gpu  OpSys  Weight        Price  Touchscreen  Ips  \\\n",
       "0  Intel Iris Plus Graphics 640  macOS    1.37   71378.6832            0    1   \n",
       "1        Intel HD Graphics 6000  macOS    1.34   47895.5232            0    0   \n",
       "2         Intel HD Graphics 620  No OS    1.86   30636.0000            0    0   \n",
       "3            AMD Radeon Pro 455  macOS    1.83  135195.3360            0    1   \n",
       "4  Intel Iris Plus Graphics 650  macOS    1.37   96095.8080            0    1   \n",
       "\n",
       "   X_res  Y_res         ppi      Cpu brand  HDD  SSD Gpu brand  \n",
       "0   2560   1600  226.983005  Intel Core i5    0  128     Intel  \n",
       "1   1440    900  127.677940  Intel Core i5    0    0     Intel  \n",
       "2   1920   1080  141.211998  Intel Core i5    0  256     Intel  \n",
       "3   2880   1800  220.534624  Intel Core i7    0  512       AMD  \n",
       "4   2560   1600  226.983005  Intel Core i5    0  256     Intel  "
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "976b5926",
   "metadata": {},
   "source": [
    "EDA on Gpu"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "75ae21d0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Intel     722\n",
       "Nvidia    400\n",
       "AMD       180\n",
       "ARM         1\n",
       "Name: Gpu brand, dtype: int64"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Gpu brand'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "5b44ee9a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# remove the row having the gpu brand arm\n",
    "df = df[df['Gpu brand'] != 'ARM']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "cdbda228",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Intel     722\n",
       "Nvidia    400\n",
       "AMD       180\n",
       "Name: Gpu brand, dtype: int64"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Gpu brand'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "36d8f6a1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(x=df['Gpu brand'],y=df['Price'],estimator=np.median)\n",
    "plt.xticks(rotation='vertical')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "60a829cc",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Vinay\\AppData\\Local\\Temp\\ipykernel_12708\\1475820835.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  df.drop(columns=['Gpu'],inplace=True)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Ram</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>Ips</th>\n",
       "      <th>X_res</th>\n",
       "      <th>Y_res</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu brand</th>\n",
       "      <th>HDD</th>\n",
       "      <th>SSD</th>\n",
       "      <th>Gpu brand</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>8</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "      <td>Intel</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>8</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1440</td>\n",
       "      <td>900</td>\n",
       "      <td>127.677940</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>8</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1920</td>\n",
       "      <td>1080</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Intel</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>16</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2880</td>\n",
       "      <td>1800</td>\n",
       "      <td>220.534624</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "      <td>AMD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>8</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Intel</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Inches                    ScreenResolution  Ram  OpSys  \\\n",
       "0   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600    8  macOS   \n",
       "1   Apple  Ultrabook    13.3                            1440x900    8  macOS   \n",
       "2      HP   Notebook    15.6                   Full HD 1920x1080    8  No OS   \n",
       "3   Apple  Ultrabook    15.4  IPS Panel Retina Display 2880x1800   16  macOS   \n",
       "4   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600    8  macOS   \n",
       "\n",
       "   Weight        Price  Touchscreen  Ips  X_res  Y_res         ppi  \\\n",
       "0    1.37   71378.6832            0    1   2560   1600  226.983005   \n",
       "1    1.34   47895.5232            0    0   1440    900  127.677940   \n",
       "2    1.86   30636.0000            0    0   1920   1080  141.211998   \n",
       "3    1.83  135195.3360            0    1   2880   1800  220.534624   \n",
       "4    1.37   96095.8080            0    1   2560   1600  226.983005   \n",
       "\n",
       "       Cpu brand  HDD  SSD Gpu brand  \n",
       "0  Intel Core i5    0  128     Intel  \n",
       "1  Intel Core i5    0    0     Intel  \n",
       "2  Intel Core i5    0  256     Intel  \n",
       "3  Intel Core i7    0  512       AMD  \n",
       "4  Intel Core i5    0  256     Intel  "
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.drop(columns=['Gpu'],inplace=True)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "raw",
   "id": "1851b14a",
   "metadata": {},
   "source": [
    "# Working on the opsystem column data and performing feature engineering on the Opsys data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "162b21b4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Windows 10      1072\n",
       "No OS             66\n",
       "Linux             62\n",
       "Windows 7         45\n",
       "Chrome OS         26\n",
       "macOS             13\n",
       "Mac OS X           8\n",
       "Windows 10 S       8\n",
       "Android            2\n",
       "Name: OpSys, dtype: int64"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['OpSys'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "de0aadd1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(x=df['OpSys'],y=df['Price'])\n",
    "plt.xticks(rotation='vertical')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9a2ba471",
   "metadata": {},
   "source": [
    "making a function for the Operating System data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "0462098d",
   "metadata": {},
   "outputs": [],
   "source": [
    "def cat_os(inp):\n",
    "    if inp == 'Windows 10' or inp == 'Windows 7' or inp == 'Windows 10 S':\n",
    "        return 'Windows'\n",
    "    elif inp == 'macOS' or inp == 'Mac OS X':\n",
    "        return 'Mac'\n",
    "    else:\n",
    "        return 'Others/No OS/Linux'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "abbacc74",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Vinay\\AppData\\Local\\Temp\\ipykernel_12708\\3648919379.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  df['os'] = df['OpSys'].apply(cat_os)\n"
     ]
    }
   ],
   "source": [
    "df['os'] = df['OpSys'].apply(cat_os)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "237b700f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Ram</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>Ips</th>\n",
       "      <th>X_res</th>\n",
       "      <th>Y_res</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu brand</th>\n",
       "      <th>HDD</th>\n",
       "      <th>SSD</th>\n",
       "      <th>Gpu brand</th>\n",
       "      <th>os</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>8</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>8</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1440</td>\n",
       "      <td>900</td>\n",
       "      <td>127.677940</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>8</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1920</td>\n",
       "      <td>1080</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Others/No OS/Linux</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>16</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2880</td>\n",
       "      <td>1800</td>\n",
       "      <td>220.534624</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "      <td>AMD</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>8</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Inches                    ScreenResolution  Ram  OpSys  \\\n",
       "0   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600    8  macOS   \n",
       "1   Apple  Ultrabook    13.3                            1440x900    8  macOS   \n",
       "2      HP   Notebook    15.6                   Full HD 1920x1080    8  No OS   \n",
       "3   Apple  Ultrabook    15.4  IPS Panel Retina Display 2880x1800   16  macOS   \n",
       "4   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600    8  macOS   \n",
       "\n",
       "   Weight        Price  Touchscreen  Ips  X_res  Y_res         ppi  \\\n",
       "0    1.37   71378.6832            0    1   2560   1600  226.983005   \n",
       "1    1.34   47895.5232            0    0   1440    900  127.677940   \n",
       "2    1.86   30636.0000            0    0   1920   1080  141.211998   \n",
       "3    1.83  135195.3360            0    1   2880   1800  220.534624   \n",
       "4    1.37   96095.8080            0    1   2560   1600  226.983005   \n",
       "\n",
       "       Cpu brand  HDD  SSD Gpu brand                  os  \n",
       "0  Intel Core i5    0  128     Intel                 Mac  \n",
       "1  Intel Core i5    0    0     Intel                 Mac  \n",
       "2  Intel Core i5    0  256     Intel  Others/No OS/Linux  \n",
       "3  Intel Core i7    0  512       AMD                 Mac  \n",
       "4  Intel Core i5    0  256     Intel                 Mac  "
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "9405ccfa",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Vinay\\AppData\\Local\\Temp\\ipykernel_12708\\3105339334.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  df.drop(columns=['OpSys'],inplace=True)\n"
     ]
    }
   ],
   "source": [
    "df.drop(columns=['OpSys'],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "5bb83503",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(x=df['os'],y=df['Price'])\n",
    "plt.xticks(rotation='vertical')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "06469a97",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Vinay\\anaconda3\\lib\\site-packages\\seaborn\\distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "  warnings.warn(msg, FutureWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Weight', ylabel='Density'>"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(df['Weight'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "00adffa4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Weight', ylabel='Price'>"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(x=df['Weight'],y=df['Price'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "34b0a920",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Inches         0.067329\n",
       "Ram            0.742905\n",
       "Weight         0.209867\n",
       "Price          1.000000\n",
       "Touchscreen    0.192917\n",
       "Ips            0.253320\n",
       "X_res          0.557369\n",
       "Y_res          0.554591\n",
       "ppi            0.475368\n",
       "HDD           -0.096891\n",
       "SSD            0.670660\n",
       "Name: Price, dtype: float64"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.corr()['Price']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "46c35b89",
   "metadata": {},
   "source": [
    "# Analysing the correlation between each entity with the other using HeatMap "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "644ae54d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(df.corr())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "96801f4e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1cd0dc072e0>"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Target Column is skewed \n",
    "sns.displot(df['Price'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "9e78ccbc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1cd0e01db80>"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# We will use log transformation to make it better\n",
    "sns.displot(np.log(df['Price']))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "7b1bc149",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = df.drop(columns=['Price','Inches','ScreenResolution','X_res','Y_res'])\n",
    "y= np.log(df['Price'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "390606ef",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>Ips</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu brand</th>\n",
       "      <th>HDD</th>\n",
       "      <th>SSD</th>\n",
       "      <th>Gpu brand</th>\n",
       "      <th>os</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>1.37</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>1.34</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>127.677940</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>1.86</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Others/No OS/Linux</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>16</td>\n",
       "      <td>1.83</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>220.534624</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "      <td>AMD</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>1.37</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1298</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>2 in 1 Convertible</td>\n",
       "      <td>4</td>\n",
       "      <td>1.80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>157.350512</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1299</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>2 in 1 Convertible</td>\n",
       "      <td>16</td>\n",
       "      <td>1.30</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>276.053530</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1300</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>2</td>\n",
       "      <td>1.50</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>111.935204</td>\n",
       "      <td>Other Intel Processor</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1301</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>6</td>\n",
       "      <td>2.19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>1000</td>\n",
       "      <td>0</td>\n",
       "      <td>AMD</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1302</th>\n",
       "      <td>Asus</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>4</td>\n",
       "      <td>2.20</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>Other Intel Processor</td>\n",
       "      <td>500</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1302 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Company            TypeName  Ram  Weight  Touchscreen  Ips         ppi  \\\n",
       "0      Apple           Ultrabook    8    1.37            0    1  226.983005   \n",
       "1      Apple           Ultrabook    8    1.34            0    0  127.677940   \n",
       "2         HP            Notebook    8    1.86            0    0  141.211998   \n",
       "3      Apple           Ultrabook   16    1.83            0    1  220.534624   \n",
       "4      Apple           Ultrabook    8    1.37            0    1  226.983005   \n",
       "...      ...                 ...  ...     ...          ...  ...         ...   \n",
       "1298  Lenovo  2 in 1 Convertible    4    1.80            1    1  157.350512   \n",
       "1299  Lenovo  2 in 1 Convertible   16    1.30            1    1  276.053530   \n",
       "1300  Lenovo            Notebook    2    1.50            0    0  111.935204   \n",
       "1301      HP            Notebook    6    2.19            0    0  100.454670   \n",
       "1302    Asus            Notebook    4    2.20            0    0  100.454670   \n",
       "\n",
       "                  Cpu brand   HDD  SSD Gpu brand                  os  \n",
       "0             Intel Core i5     0  128     Intel                 Mac  \n",
       "1             Intel Core i5     0    0     Intel                 Mac  \n",
       "2             Intel Core i5     0  256     Intel  Others/No OS/Linux  \n",
       "3             Intel Core i7     0  512       AMD                 Mac  \n",
       "4             Intel Core i5     0  256     Intel                 Mac  \n",
       "...                     ...   ...  ...       ...                 ...  \n",
       "1298          Intel Core i7     0  128     Intel             Windows  \n",
       "1299          Intel Core i7     0  512     Intel             Windows  \n",
       "1300  Other Intel Processor     0    0     Intel             Windows  \n",
       "1301          Intel Core i7  1000    0       AMD             Windows  \n",
       "1302  Other Intel Processor   500    0     Intel             Windows  \n",
       "\n",
       "[1302 rows x 12 columns]"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "13d626e1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       11.175755\n",
       "1       10.776777\n",
       "2       10.329931\n",
       "3       11.814476\n",
       "4       11.473101\n",
       "          ...    \n",
       "1298    10.433899\n",
       "1299    11.288115\n",
       "1300     9.409283\n",
       "1301    10.614129\n",
       "1302     9.886358\n",
       "Name: Price, Length: 1302, dtype: float64"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "8487db33",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.15,random_state=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "ccb80d27",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>Ips</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu brand</th>\n",
       "      <th>HDD</th>\n",
       "      <th>SSD</th>\n",
       "      <th>Gpu brand</th>\n",
       "      <th>os</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>Toshiba</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>2.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1141</th>\n",
       "      <td>MSI</td>\n",
       "      <td>Gaming</td>\n",
       "      <td>8</td>\n",
       "      <td>2.40</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>1000</td>\n",
       "      <td>128</td>\n",
       "      <td>Nvidia</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1049</th>\n",
       "      <td>Asus</td>\n",
       "      <td>Netbook</td>\n",
       "      <td>4</td>\n",
       "      <td>1.20</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>135.094211</td>\n",
       "      <td>Other Intel Processor</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Others/No OS/Linux</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1020</th>\n",
       "      <td>Dell</td>\n",
       "      <td>2 in 1 Convertible</td>\n",
       "      <td>4</td>\n",
       "      <td>2.08</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i3</td>\n",
       "      <td>1000</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>878</th>\n",
       "      <td>Dell</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>4</td>\n",
       "      <td>2.18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>1000</td>\n",
       "      <td>128</td>\n",
       "      <td>Nvidia</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>466</th>\n",
       "      <td>Acer</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>4</td>\n",
       "      <td>2.20</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>Intel Core i3</td>\n",
       "      <td>500</td>\n",
       "      <td>0</td>\n",
       "      <td>Nvidia</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>299</th>\n",
       "      <td>Asus</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>16</td>\n",
       "      <td>1.63</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "      <td>Nvidia</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>493</th>\n",
       "      <td>Acer</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>2.20</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>AMD Processor</td>\n",
       "      <td>1000</td>\n",
       "      <td>0</td>\n",
       "      <td>AMD</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>527</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>2.20</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>Intel Core i3</td>\n",
       "      <td>2000</td>\n",
       "      <td>0</td>\n",
       "      <td>Nvidia</td>\n",
       "      <td>Others/No OS/Linux</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1193</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>0.92</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.415547</td>\n",
       "      <td>Other Intel Processor</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1106 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Company            TypeName  Ram  Weight  Touchscreen  Ips         ppi  \\\n",
       "183   Toshiba            Notebook    8    2.00            0    0  100.454670   \n",
       "1141      MSI              Gaming    8    2.40            0    0  141.211998   \n",
       "1049     Asus             Netbook    4    1.20            0    0  135.094211   \n",
       "1020     Dell  2 in 1 Convertible    4    2.08            1    1  141.211998   \n",
       "878      Dell            Notebook    4    2.18            0    0  141.211998   \n",
       "...       ...                 ...  ...     ...          ...  ...         ...   \n",
       "466      Acer            Notebook    4    2.20            0    0  100.454670   \n",
       "299      Asus           Ultrabook   16    1.63            0    0  141.211998   \n",
       "493      Acer            Notebook    8    2.20            0    0  100.454670   \n",
       "527    Lenovo            Notebook    8    2.20            0    0  100.454670   \n",
       "1193    Apple           Ultrabook    8    0.92            0    1  226.415547   \n",
       "\n",
       "                  Cpu brand   HDD  SSD Gpu brand                  os  \n",
       "183           Intel Core i5     0  128     Intel             Windows  \n",
       "1141          Intel Core i7  1000  128    Nvidia             Windows  \n",
       "1049  Other Intel Processor     0    0     Intel  Others/No OS/Linux  \n",
       "1020          Intel Core i3  1000    0     Intel             Windows  \n",
       "878           Intel Core i5  1000  128    Nvidia             Windows  \n",
       "...                     ...   ...  ...       ...                 ...  \n",
       "466           Intel Core i3   500    0    Nvidia             Windows  \n",
       "299           Intel Core i7     0  512    Nvidia             Windows  \n",
       "493           AMD Processor  1000    0       AMD             Windows  \n",
       "527           Intel Core i3  2000    0    Nvidia  Others/No OS/Linux  \n",
       "1193  Other Intel Processor     0    0     Intel                 Mac  \n",
       "\n",
       "[1106 rows x 12 columns]"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "bec5ecea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>Ips</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu brand</th>\n",
       "      <th>HDD</th>\n",
       "      <th>SSD</th>\n",
       "      <th>Gpu brand</th>\n",
       "      <th>os</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>4</td>\n",
       "      <td>1.49</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>165.632118</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>500</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>555</th>\n",
       "      <td>Asus</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>4</td>\n",
       "      <td>2.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>Other Intel Processor</td>\n",
       "      <td>500</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Others/No OS/Linux</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1251</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>4</td>\n",
       "      <td>1.86</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>AMD Processor</td>\n",
       "      <td>500</td>\n",
       "      <td>0</td>\n",
       "      <td>AMD</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>547</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>4</td>\n",
       "      <td>2.15</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>1000</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Others/No OS/Linux</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>885</th>\n",
       "      <td>HP</td>\n",
       "      <td>2 in 1 Convertible</td>\n",
       "      <td>4</td>\n",
       "      <td>1.28</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>165.632118</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1129</th>\n",
       "      <td>HP</td>\n",
       "      <td>Gaming</td>\n",
       "      <td>8</td>\n",
       "      <td>3.35</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>127.335675</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>1000</td>\n",
       "      <td>128</td>\n",
       "      <td>Nvidia</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>172</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>4</td>\n",
       "      <td>2.20</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>AMD Processor</td>\n",
       "      <td>500</td>\n",
       "      <td>0</td>\n",
       "      <td>AMD</td>\n",
       "      <td>Others/No OS/Linux</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>322</th>\n",
       "      <td>Asus</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>2.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>157.350512</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>HP</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>1.11</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>165.632118</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>470</th>\n",
       "      <td>HP</td>\n",
       "      <td>2 in 1 Convertible</td>\n",
       "      <td>8</td>\n",
       "      <td>1.29</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>331.264236</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>196 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Company            TypeName  Ram  Weight  Touchscreen  Ips         ppi  \\\n",
       "248       HP            Notebook    4    1.49            0    1  165.632118   \n",
       "555     Asus            Notebook    4    2.00            0    0  100.454670   \n",
       "1251      HP            Notebook    4    1.86            0    0  100.454670   \n",
       "547   Lenovo            Notebook    4    2.15            0    0  141.211998   \n",
       "885       HP  2 in 1 Convertible    4    1.28            1    0  165.632118   \n",
       "...      ...                 ...  ...     ...          ...  ...         ...   \n",
       "1129      HP              Gaming    8    3.35            0    1  127.335675   \n",
       "172   Lenovo            Notebook    4    2.20            0    0  100.454670   \n",
       "322     Asus            Notebook    8    2.00            0    0  157.350512   \n",
       "996       HP           Ultrabook    8    1.11            1    1  165.632118   \n",
       "470       HP  2 in 1 Convertible    8    1.29            1    1  331.264236   \n",
       "\n",
       "                  Cpu brand   HDD  SSD Gpu brand                  os  \n",
       "248           Intel Core i5   500    0     Intel             Windows  \n",
       "555   Other Intel Processor   500    0     Intel  Others/No OS/Linux  \n",
       "1251          AMD Processor   500    0       AMD             Windows  \n",
       "547           Intel Core i5  1000    0     Intel  Others/No OS/Linux  \n",
       "885           Intel Core i5     0  256     Intel             Windows  \n",
       "...                     ...   ...  ...       ...                 ...  \n",
       "1129          Intel Core i5  1000  128    Nvidia             Windows  \n",
       "172           AMD Processor   500    0       AMD  Others/No OS/Linux  \n",
       "322           Intel Core i7     0  256     Intel             Windows  \n",
       "996           Intel Core i7     0  256     Intel             Windows  \n",
       "470           Intel Core i7     0  512     Intel             Windows  \n",
       "\n",
       "[196 rows x 12 columns]"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "id": "53615a65",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "183     10.651384\n",
       "1141    11.016798\n",
       "1049     9.638174\n",
       "1020    10.655148\n",
       "878     10.791749\n",
       "          ...    \n",
       "466     10.126164\n",
       "299     11.267217\n",
       "493     10.336864\n",
       "527     10.104611\n",
       "1193    11.034319\n",
       "Name: Price, Length: 1106, dtype: float64"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "bca1ddd1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "248     10.490274\n",
       "555      9.387207\n",
       "1251     9.964522\n",
       "547     10.111883\n",
       "885     11.470547\n",
       "          ...    \n",
       "1129    11.004649\n",
       "172      9.708902\n",
       "322     10.973157\n",
       "996     11.182680\n",
       "470     11.575963\n",
       "Name: Price, Length: 196, dtype: float64"
      ]
     },
     "execution_count": 113,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "d58812b9",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.compose import ColumnTransformer\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.preprocessing import OneHotEncoder\n",
    "from sklearn.metrics import r2_score,mean_absolute_error"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "127d97c3",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LinearRegression,Ridge,Lasso\n",
    "from sklearn.neighbors import KNeighborsRegressor\n",
    "from sklearn.tree import DecisionTreeRegressor\n",
    "from sklearn.ensemble import RandomForestRegressor,GradientBoostingRegressor,AdaBoostRegressor,ExtraTreesRegressor\n",
    "from sklearn.svm import SVR"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "6658595a",
   "metadata": {},
   "outputs": [],
   "source": [
    "from xgboost import XGBRegressor"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bb8c3dc1",
   "metadata": {},
   "source": [
    "### Linear regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "3c04808d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 score 0.8073277448418734\n",
      "MAE 0.21017827976428724\n"
     ]
    }
   ],
   "source": [
    "step1 = ColumnTransformer(transformers=[\n",
    "    ('col_tnf',OneHotEncoder(sparse=False,drop='first'),[0,1,7,10,11])\n",
    "],remainder='passthrough')\n",
    "\n",
    "step2 = LinearRegression()\n",
    "\n",
    "pipe = Pipeline([\n",
    "    ('step1',step1),\n",
    "    ('step2',step2)\n",
    "])\n",
    "\n",
    "pipe.fit(X_train,y_train)\n",
    "\n",
    "y_pred = pipe.predict(X_test)\n",
    "\n",
    "print('R2 score',r2_score(y_test,y_pred))\n",
    "print('MAE',mean_absolute_error(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "63d88cf5",
   "metadata": {},
   "source": [
    "### Ridge Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "eef74ef8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 score 0.8127331031311809\n",
      "MAE 0.20926802242582965\n"
     ]
    }
   ],
   "source": [
    "step1 = ColumnTransformer(transformers=[\n",
    "    ('col_tnf',OneHotEncoder(sparse=False,drop='first'),[0,1,7,10,11])\n",
    "],remainder='passthrough')\n",
    "\n",
    "step2 = Ridge(alpha=10)\n",
    "\n",
    "pipe = Pipeline([\n",
    "    ('step1',step1),\n",
    "    ('step2',step2)\n",
    "])\n",
    "\n",
    "pipe.fit(X_train,y_train)\n",
    "\n",
    "y_pred = pipe.predict(X_test)\n",
    "\n",
    "print('R2 score',r2_score(y_test,y_pred))\n",
    "print('MAE',mean_absolute_error(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "27a8f529",
   "metadata": {},
   "source": [
    "### Lasso Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "ae8217a9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 score 0.8071853945317105\n",
      "MAE 0.21114361613472565\n"
     ]
    }
   ],
   "source": [
    "step1 = ColumnTransformer(transformers=[\n",
    "    ('col_tnf',OneHotEncoder(sparse=False,drop='first'),[0,1,7,10,11])\n",
    "],remainder='passthrough')\n",
    "\n",
    "step2 = Lasso(alpha=0.001)\n",
    "\n",
    "pipe = Pipeline([\n",
    "    ('step1',step1),\n",
    "    ('step2',step2)\n",
    "])\n",
    "\n",
    "pipe.fit(X_train,y_train)\n",
    "\n",
    "y_pred = pipe.predict(X_test)\n",
    "\n",
    "print('R2 score',r2_score(y_test,y_pred))\n",
    "print('MAE',mean_absolute_error(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6e38f092",
   "metadata": {},
   "source": [
    "### KNN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "fcb4f77d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 score 0.8021984604448553\n",
      "MAE 0.19319716721521116\n"
     ]
    }
   ],
   "source": [
    "step1 = ColumnTransformer(transformers=[\n",
    "    ('col_tnf',OneHotEncoder(sparse=False,drop='first'),[0,1,7,10,11])\n",
    "],remainder='passthrough')\n",
    "\n",
    "step2 = KNeighborsRegressor(n_neighbors=3)\n",
    "\n",
    "pipe = Pipeline([\n",
    "    ('step1',step1),\n",
    "    ('step2',step2)\n",
    "])\n",
    "\n",
    "pipe.fit(X_train,y_train)\n",
    "\n",
    "y_pred = pipe.predict(X_test)\n",
    "\n",
    "print('R2 score',r2_score(y_test,y_pred))\n",
    "print('MAE',mean_absolute_error(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d6fb0652",
   "metadata": {},
   "source": [
    "### Decision Tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "5af7271e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 score 0.8305293971314777\n",
      "MAE 0.18670348258264688\n"
     ]
    }
   ],
   "source": [
    "step1 = ColumnTransformer(transformers=[\n",
    "    ('col_tnf',OneHotEncoder(sparse=False,drop='first'),[0,1,7,10,11])\n",
    "],remainder='passthrough')\n",
    "\n",
    "step2 = DecisionTreeRegressor(max_depth=8)\n",
    "\n",
    "pipe = Pipeline([\n",
    "    ('step1',step1),\n",
    "    ('step2',step2)\n",
    "])\n",
    "\n",
    "pipe.fit(X_train,y_train)\n",
    "\n",
    "y_pred = pipe.predict(X_test)\n",
    "\n",
    "print('R2 score',r2_score(y_test,y_pred))\n",
    "print('MAE',mean_absolute_error(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fc698b0b",
   "metadata": {},
   "source": [
    "### SVM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "8459f206",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 score 0.8083180902257614\n",
      "MAE 0.20239059427481307\n"
     ]
    }
   ],
   "source": [
    "step1 = ColumnTransformer(transformers=[\n",
    "    ('col_tnf',OneHotEncoder(sparse=False,drop='first'),[0,1,7,10,11])\n",
    "],remainder='passthrough')\n",
    "\n",
    "step2 = SVR(kernel='rbf',C=10000,epsilon=0.1)\n",
    "\n",
    "pipe = Pipeline([\n",
    "    ('step1',step1),\n",
    "    ('step2',step2)\n",
    "])\n",
    "\n",
    "pipe.fit(X_train,y_train)\n",
    "\n",
    "y_pred = pipe.predict(X_test)\n",
    "\n",
    "print('R2 score',r2_score(y_test,y_pred))\n",
    "print('MAE',mean_absolute_error(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "825e6f53",
   "metadata": {},
   "source": [
    "### Random Forest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "eb38b70b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 score 0.8873402378382488\n",
      "MAE 0.15860130110457718\n"
     ]
    }
   ],
   "source": [
    "step1 = ColumnTransformer(transformers=[\n",
    "    ('col_tnf',OneHotEncoder(sparse=False,drop='first'),[0,1,7,10,11])\n",
    "],remainder='passthrough')\n",
    "\n",
    "step2 = RandomForestRegressor(n_estimators=100,\n",
    "                              random_state=3,\n",
    "                              max_samples=0.5,\n",
    "                              max_features=0.75,\n",
    "                              max_depth=15)\n",
    "\n",
    "pipe = Pipeline([\n",
    "    ('step1',step1),\n",
    "    ('step2',step2)\n",
    "])\n",
    "\n",
    "pipe.fit(X_train,y_train)\n",
    "\n",
    "y_pred = pipe.predict(X_test)\n",
    "\n",
    "print('R2 score',r2_score(y_test,y_pred))\n",
    "print('MAE',mean_absolute_error(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1e5f754d",
   "metadata": {},
   "source": [
    "### AdaBoost"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "e4392301",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 score 0.7949911685686265\n",
      "MAE 0.23210546044128805\n"
     ]
    }
   ],
   "source": [
    "step1 = ColumnTransformer(transformers=[\n",
    "    ('col_tnf',OneHotEncoder(sparse=False,drop='first'),[0,1,7,10,11])\n",
    "],remainder='passthrough')\n",
    "\n",
    "step2 = AdaBoostRegressor(n_estimators=15,learning_rate=1.0)\n",
    "\n",
    "pipe = Pipeline([\n",
    "    ('step1',step1),\n",
    "    ('step2',step2)\n",
    "])\n",
    "\n",
    "pipe.fit(X_train,y_train)\n",
    "\n",
    "y_pred = pipe.predict(X_test)\n",
    "\n",
    "print('R2 score',r2_score(y_test,y_pred))\n",
    "print('MAE',mean_absolute_error(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f2b91517",
   "metadata": {},
   "source": [
    "### Gradient Boost"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "0b31ed3c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 score 0.882442739545264\n",
      "MAE 0.1593722257851149\n"
     ]
    }
   ],
   "source": [
    "step1 = ColumnTransformer(transformers=[\n",
    "    ('col_tnf',OneHotEncoder(sparse=False,drop='first'),[0,1,7,10,11])\n",
    "],remainder='passthrough')\n",
    "\n",
    "step2 = GradientBoostingRegressor(n_estimators=500)\n",
    "\n",
    "pipe = Pipeline([\n",
    "    ('step1',step1),\n",
    "    ('step2',step2)\n",
    "])\n",
    "\n",
    "pipe.fit(X_train,y_train)\n",
    "\n",
    "y_pred = pipe.predict(X_test)\n",
    "\n",
    "print('R2 score',r2_score(y_test,y_pred))\n",
    "print('MAE',mean_absolute_error(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8746f47c",
   "metadata": {},
   "source": [
    "### XgBoost"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "af95b95f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 score 0.8811773435850243\n",
      "MAE 0.16496203512600974\n"
     ]
    }
   ],
   "source": [
    "step1 = ColumnTransformer(transformers=[\n",
    "    ('col_tnf',OneHotEncoder(sparse=False,drop='first'),[0,1,7,10,11])\n",
    "],remainder='passthrough')\n",
    "\n",
    "step2 = XGBRegressor(n_estimators=45,max_depth=5,learning_rate=0.5)\n",
    "\n",
    "pipe = Pipeline([\n",
    "    ('step1',step1),\n",
    "    ('step2',step2)\n",
    "])\n",
    "\n",
    "pipe.fit(X_train,y_train)\n",
    "\n",
    "y_pred = pipe.predict(X_test)\n",
    "\n",
    "print('R2 score',r2_score(y_test,y_pred))\n",
    "print('MAE',mean_absolute_error(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5d7d0be3",
   "metadata": {},
   "source": [
    "### Stacking"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "11d8a1dc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 score 0.8799309926759937\n",
      "MAE 0.16722585720422403\n"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import VotingRegressor,StackingRegressor\n",
    "\n",
    "step1 = ColumnTransformer(transformers=[\n",
    "    ('col_tnf',OneHotEncoder(sparse=False,drop='first'),[0,1,7,10,11])\n",
    "],remainder='passthrough')\n",
    "\n",
    "\n",
    "estimators = [\n",
    "    ('rf', RandomForestRegressor(n_estimators=350,random_state=3,max_samples=0.5,max_features=0.75,max_depth=15)),\n",
    "    ('gbdt',GradientBoostingRegressor(n_estimators=100,max_features=0.5)),\n",
    "    ('xgb', XGBRegressor(n_estimators=25,learning_rate=0.3,max_depth=5))\n",
    "]\n",
    "\n",
    "step2 = StackingRegressor(estimators=estimators, final_estimator=Ridge(alpha=100))\n",
    "\n",
    "pipe = Pipeline([\n",
    "    ('step1',step1),\n",
    "    ('step2',step2)\n",
    "])\n",
    "\n",
    "pipe.fit(X_train,y_train)\n",
    "\n",
    "y_pred = pipe.predict(X_test)\n",
    "\n",
    "print('R2 score',r2_score(y_test,y_pred))\n",
    "print('MAE',mean_absolute_error(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "76e2c3a2",
   "metadata": {},
   "source": [
    "### Exporting the Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "id": "5fd76630",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pickle\n",
    "\n",
    "pickle.dump(df,open('df.pkl','wb'))\n",
    "pickle.dump(pipe,open('pipe.pkl','wb'))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "id": "7c8749b5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>Ips</th>\n",
       "      <th>X_res</th>\n",
       "      <th>Y_res</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu brand</th>\n",
       "      <th>HDD</th>\n",
       "      <th>SSD</th>\n",
       "      <th>Gpu brand</th>\n",
       "      <th>os</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>8</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>8</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1440</td>\n",
       "      <td>900</td>\n",
       "      <td>127.677940</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>8</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1920</td>\n",
       "      <td>1080</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Others/No OS/Linux</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>16</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2880</td>\n",
       "      <td>1800</td>\n",
       "      <td>220.534624</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "      <td>AMD</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>8</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1298</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>2 in 1 Convertible</td>\n",
       "      <td>14.0</td>\n",
       "      <td>IPS Panel Full HD / Touchscreen 1920x1080</td>\n",
       "      <td>4</td>\n",
       "      <td>1.80</td>\n",
       "      <td>33992.6400</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1920</td>\n",
       "      <td>1080</td>\n",
       "      <td>157.350512</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1299</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>2 in 1 Convertible</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Quad HD+ / Touchscreen 3200x1800</td>\n",
       "      <td>16</td>\n",
       "      <td>1.30</td>\n",
       "      <td>79866.7200</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3200</td>\n",
       "      <td>1800</td>\n",
       "      <td>276.053530</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1300</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>14.0</td>\n",
       "      <td>1366x768</td>\n",
       "      <td>2</td>\n",
       "      <td>1.50</td>\n",
       "      <td>12201.1200</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1366</td>\n",
       "      <td>768</td>\n",
       "      <td>111.935204</td>\n",
       "      <td>Other Intel Processor</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1301</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>1366x768</td>\n",
       "      <td>6</td>\n",
       "      <td>2.19</td>\n",
       "      <td>40705.9200</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1366</td>\n",
       "      <td>768</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>1000</td>\n",
       "      <td>0</td>\n",
       "      <td>AMD</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1302</th>\n",
       "      <td>Asus</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>1366x768</td>\n",
       "      <td>4</td>\n",
       "      <td>2.20</td>\n",
       "      <td>19660.3200</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1366</td>\n",
       "      <td>768</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>Other Intel Processor</td>\n",
       "      <td>500</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1302 rows × 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Company            TypeName  Inches  \\\n",
       "0      Apple           Ultrabook    13.3   \n",
       "1      Apple           Ultrabook    13.3   \n",
       "2         HP            Notebook    15.6   \n",
       "3      Apple           Ultrabook    15.4   \n",
       "4      Apple           Ultrabook    13.3   \n",
       "...      ...                 ...     ...   \n",
       "1298  Lenovo  2 in 1 Convertible    14.0   \n",
       "1299  Lenovo  2 in 1 Convertible    13.3   \n",
       "1300  Lenovo            Notebook    14.0   \n",
       "1301      HP            Notebook    15.6   \n",
       "1302    Asus            Notebook    15.6   \n",
       "\n",
       "                                ScreenResolution  Ram  Weight        Price  \\\n",
       "0             IPS Panel Retina Display 2560x1600    8    1.37   71378.6832   \n",
       "1                                       1440x900    8    1.34   47895.5232   \n",
       "2                              Full HD 1920x1080    8    1.86   30636.0000   \n",
       "3             IPS Panel Retina Display 2880x1800   16    1.83  135195.3360   \n",
       "4             IPS Panel Retina Display 2560x1600    8    1.37   96095.8080   \n",
       "...                                          ...  ...     ...          ...   \n",
       "1298   IPS Panel Full HD / Touchscreen 1920x1080    4    1.80   33992.6400   \n",
       "1299  IPS Panel Quad HD+ / Touchscreen 3200x1800   16    1.30   79866.7200   \n",
       "1300                                    1366x768    2    1.50   12201.1200   \n",
       "1301                                    1366x768    6    2.19   40705.9200   \n",
       "1302                                    1366x768    4    2.20   19660.3200   \n",
       "\n",
       "      Touchscreen  Ips  X_res  Y_res         ppi              Cpu brand   HDD  \\\n",
       "0               0    1   2560   1600  226.983005          Intel Core i5     0   \n",
       "1               0    0   1440    900  127.677940          Intel Core i5     0   \n",
       "2               0    0   1920   1080  141.211998          Intel Core i5     0   \n",
       "3               0    1   2880   1800  220.534624          Intel Core i7     0   \n",
       "4               0    1   2560   1600  226.983005          Intel Core i5     0   \n",
       "...           ...  ...    ...    ...         ...                    ...   ...   \n",
       "1298            1    1   1920   1080  157.350512          Intel Core i7     0   \n",
       "1299            1    1   3200   1800  276.053530          Intel Core i7     0   \n",
       "1300            0    0   1366    768  111.935204  Other Intel Processor     0   \n",
       "1301            0    0   1366    768  100.454670          Intel Core i7  1000   \n",
       "1302            0    0   1366    768  100.454670  Other Intel Processor   500   \n",
       "\n",
       "      SSD Gpu brand                  os  \n",
       "0     128     Intel                 Mac  \n",
       "1       0     Intel                 Mac  \n",
       "2     256     Intel  Others/No OS/Linux  \n",
       "3     512       AMD                 Mac  \n",
       "4     256     Intel                 Mac  \n",
       "...   ...       ...                 ...  \n",
       "1298  128     Intel             Windows  \n",
       "1299  512     Intel             Windows  \n",
       "1300    0     Intel             Windows  \n",
       "1301    0       AMD             Windows  \n",
       "1302    0     Intel             Windows  \n",
       "\n",
       "[1302 rows x 17 columns]"
      ]
     },
     "execution_count": 140,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "id": "ddb4b0d9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>Ips</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu brand</th>\n",
       "      <th>HDD</th>\n",
       "      <th>SSD</th>\n",
       "      <th>Gpu brand</th>\n",
       "      <th>os</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>Toshiba</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>2.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1141</th>\n",
       "      <td>MSI</td>\n",
       "      <td>Gaming</td>\n",
       "      <td>8</td>\n",
       "      <td>2.40</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>1000</td>\n",
       "      <td>128</td>\n",
       "      <td>Nvidia</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1049</th>\n",
       "      <td>Asus</td>\n",
       "      <td>Netbook</td>\n",
       "      <td>4</td>\n",
       "      <td>1.20</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>135.094211</td>\n",
       "      <td>Other Intel Processor</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Others/No OS/Linux</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1020</th>\n",
       "      <td>Dell</td>\n",
       "      <td>2 in 1 Convertible</td>\n",
       "      <td>4</td>\n",
       "      <td>2.08</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i3</td>\n",
       "      <td>1000</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>878</th>\n",
       "      <td>Dell</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>4</td>\n",
       "      <td>2.18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>1000</td>\n",
       "      <td>128</td>\n",
       "      <td>Nvidia</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>466</th>\n",
       "      <td>Acer</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>4</td>\n",
       "      <td>2.20</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>Intel Core i3</td>\n",
       "      <td>500</td>\n",
       "      <td>0</td>\n",
       "      <td>Nvidia</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>299</th>\n",
       "      <td>Asus</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>16</td>\n",
       "      <td>1.63</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "      <td>Nvidia</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>493</th>\n",
       "      <td>Acer</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>2.20</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>AMD Processor</td>\n",
       "      <td>1000</td>\n",
       "      <td>0</td>\n",
       "      <td>AMD</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>527</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>2.20</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>Intel Core i3</td>\n",
       "      <td>2000</td>\n",
       "      <td>0</td>\n",
       "      <td>Nvidia</td>\n",
       "      <td>Others/No OS/Linux</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1193</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>0.92</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.415547</td>\n",
       "      <td>Other Intel Processor</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1106 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Company            TypeName  Ram  Weight  Touchscreen  Ips         ppi  \\\n",
       "183   Toshiba            Notebook    8    2.00            0    0  100.454670   \n",
       "1141      MSI              Gaming    8    2.40            0    0  141.211998   \n",
       "1049     Asus             Netbook    4    1.20            0    0  135.094211   \n",
       "1020     Dell  2 in 1 Convertible    4    2.08            1    1  141.211998   \n",
       "878      Dell            Notebook    4    2.18            0    0  141.211998   \n",
       "...       ...                 ...  ...     ...          ...  ...         ...   \n",
       "466      Acer            Notebook    4    2.20            0    0  100.454670   \n",
       "299      Asus           Ultrabook   16    1.63            0    0  141.211998   \n",
       "493      Acer            Notebook    8    2.20            0    0  100.454670   \n",
       "527    Lenovo            Notebook    8    2.20            0    0  100.454670   \n",
       "1193    Apple           Ultrabook    8    0.92            0    1  226.415547   \n",
       "\n",
       "                  Cpu brand   HDD  SSD Gpu brand                  os  \n",
       "183           Intel Core i5     0  128     Intel             Windows  \n",
       "1141          Intel Core i7  1000  128    Nvidia             Windows  \n",
       "1049  Other Intel Processor     0    0     Intel  Others/No OS/Linux  \n",
       "1020          Intel Core i3  1000    0     Intel             Windows  \n",
       "878           Intel Core i5  1000  128    Nvidia             Windows  \n",
       "...                     ...   ...  ...       ...                 ...  \n",
       "466           Intel Core i3   500    0    Nvidia             Windows  \n",
       "299           Intel Core i7     0  512    Nvidia             Windows  \n",
       "493           AMD Processor  1000    0       AMD             Windows  \n",
       "527           Intel Core i3  2000    0    Nvidia  Others/No OS/Linux  \n",
       "1193  Other Intel Processor     0    0     Intel                 Mac  \n",
       "\n",
       "[1106 rows x 12 columns]"
      ]
     },
     "execution_count": 141,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b34cfc76",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
